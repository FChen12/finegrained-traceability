{"ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "EntitaNonTrovataEccezione.getMessage()", "ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "CampoObbligatorioEccezione.printStackTrace()", "ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "ManagerInsegnamento.ottenereIstanza()", "EntitaDuplicataEccezione.printStackTrace()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerIndirizzo.ottenereIstanza()", "ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletAggiungiRimuoviInsegnamentiComeIndirizzo", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.ottenereIstanza()": {"calls": [], "called_by": ["ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "ManagerClasse.ottenereClassePerStudente(Utente)", "ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ManagerClasse.ottenereClassePerInsegnante(Utente)", "ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "ottenereIstanza", "params": []}, "ManagerInsegnamento.ottenereIstanza()": {"calls": [], "called_by": ["ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerInsegnamento", "method_name": "ottenereIstanza", "params": []}, "ManagerIndirizzo.ottenereIstanza()": {"calls": [], "called_by": ["ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerIndirizzo", "method_name": "ottenereIstanza", "params": []}, "ManagerUtente.eAmministratore(Utente)": {"calls": [], "called_by": ["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "eAmministratore", "params": ["Utente"]}, "ManagerInsegnamento.ottenereInsegnamentoPerId(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "DBConnessione.ottenereConnesione()", "ManagerInsegnamento.loadRecordFromRs(ResultSet)", "Utility.queryOperazione(Connection,String)", "Utility.eNull(Integer)"], "called_by": ["ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentoPerId", "params": ["int"]}, "ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "DBConnessione.ottenereConnesione()", "Insegnamento.ottenereId()", "Indirizzo.ottenereIdIndirizzo()", "Utility.queryOperazione(Connection,String)", "Utility.eNull(Integer)"], "called_by": ["ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerIndirizzo", "method_name": "avereInsegnamento", "params": ["Insegnamento", "Indirizzo"]}, "ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "Insegnamento.ottenereId()", "Indirizzo.ottenereIdIndirizzo()", "Utility.eseguireOperazione(Connection,String)", "DBConnessione.ottenereConnesione()", "ManagerIndirizzo.ottenereIstanza()", "Utility.eNull(Integer)"], "called_by": ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerIndirizzo", "method_name": "assegnareInsegnamentoComeIndirizzo", "params": ["Indirizzo", "Insegnamento"]}, "ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "Insegnamento.ottenereId()", "Indirizzo.ottenereIdIndirizzo()", "Utility.eseguireOperazione(Connection,String)", "DBConnessione.ottenereConnesione()", "ManagerIndirizzo.ottenereIstanza()", "Utility.eNull(Integer)"], "called_by": ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerIndirizzo", "method_name": "rimuovereInsegnamentoComeIndirizzo", "params": ["Indirizzo", "Insegnamento"]}, "EntitaNonTrovataEccezione.getMessage()": {"calls": [], "called_by": ["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "EntitaNonTrovataEccezione", "method_name": "getMessage", "params": []}, "EntitaNonTrovataEccezione.printStackTrace()": {"calls": [], "called_by": ["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "EntitaNonTrovataEccezione", "method_name": "printStackTrace", "params": []}, "ConnessioneEccezione.getMessage()": {"calls": [], "called_by": ["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ConnessioneEccezione", "method_name": "getMessage", "params": []}, "ConnessioneEccezione.printStackTrace()": {"calls": [], "called_by": ["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ConnessioneEccezione", "method_name": "printStackTrace", "params": []}, "ValoreNonValidoEccezione.printStackTrace()": {"calls": [], "called_by": ["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ValoreNonValidoEccezione", "method_name": "printStackTrace", "params": []}, "CampoObbligatorioEccezione.printStackTrace()": {"calls": [], "called_by": ["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "CampoObbligatorioEccezione", "method_name": "printStackTrace", "params": []}, "EntitaDuplicataEccezione.printStackTrace()": {"calls": [], "called_by": ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "EntitaDuplicataEccezione", "method_name": "printStackTrace", "params": []}, "ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletAggiungiRimuoviInsegnamentiComeIndirizzo", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "CampoObbligatorioEccezione.printStackTrace()", "ManagerIndirizzo.elimina(Indirizzo)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "CampoObbligatorioEccezione.getMessage()", "ManagerIndirizzo.ottenereIstanza()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletEliminaIndirizzo.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletEliminaIndirizzo", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerIndirizzo.elimina(Indirizzo)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.eseguireOperazione(Connection,String)", "DBConnessione.ottenereConnesione()", "Indirizzo.ottenereIdIndirizzo()", "Utility.eNull(Integer)"], "called_by": ["ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerIndirizzo", "method_name": "elimina", "params": ["Indirizzo"]}, "CampoObbligatorioEccezione.getMessage()": {"calls": [], "called_by": ["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "CampoObbligatorioEccezione", "method_name": "getMessage", "params": []}, "ValoreNonValidoEccezione.getMessage()": {"calls": [], "called_by": ["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ValoreNonValidoEccezione", "method_name": "getMessage", "params": []}, "ServletEliminaIndirizzo.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletEliminaIndirizzo", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerInsegnamento.ottenereIstanza()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ManagerInsegnamento.ottenereInsegnamenti()", "ManagerUtente.eAmministratore(Utente)", "ValoreNonValidoEccezione.printStackTrace()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletIndirizzoInsegnamenti.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletIndirizzoInsegnamenti", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerInsegnamento.ottenereInsegnamenti()": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerInsegnamento.loadRecordsFromRs(ResultSet)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamenti", "params": []}, "ServletIndirizzoInsegnamenti.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletIndirizzoInsegnamenti", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "Indirizzo.settareNome(String)", "CampoObbligatorioEccezione.printStackTrace()", "EntitaDuplicataEccezione.printStackTrace()", "ConnessioneEccezione.printStackTrace()", "ManagerIndirizzo.inserire(Indirizzo)", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerIndirizzo.esiste(Indirizzo)", "CampoObbligatorioEccezione.getMessage()", "ManagerIndirizzo.ottenereIstanza()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()", "EntitaDuplicataEccezione.getMessage()"], "called_by": ["ServletInserireIndirizzo.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletInserireIndirizzo", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Indirizzo.settareNome(String)": {"calls": [], "called_by": ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ManagerIndirizzo.loadRecordFromRs(ResultSet)"], "class_name": "Indirizzo", "method_name": "settareNome", "params": ["String"]}, "ManagerIndirizzo.esiste(Indirizzo)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Indirizzo.ottenereNome()", "Utility.eNull(String)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerIndirizzo", "method_name": "esiste", "params": ["Indirizzo"]}, "ManagerIndirizzo.inserire(Indirizzo)": {"calls": ["Indirizzo.settareIdIndirizzo(int)", "DBConnessione.rilasciareConnessione(Connection)", "Utility.eseguireOperazione(Connection,String)", "Utility.ottenereValoreMassimo(String,String)", "Indirizzo.ottenereNome()", "Utility.eNull(String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerIndirizzo", "method_name": "inserire", "params": ["Indirizzo"]}, "EntitaDuplicataEccezione.getMessage()": {"calls": [], "called_by": ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "EntitaDuplicataEccezione", "method_name": "getMessage", "params": []}, "ServletInserireIndirizzo.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletInserireIndirizzo", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerIndirizzo.ottenereIstanza()", "EntitaNonTrovataEccezione.printStackTrace()", "ManagerIndirizzo.ottenereIndirizzoPerId(int)", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraDettagliIndirizzo.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraDettagliIndirizzo", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerIndirizzo.ottenereIndirizzoPerId(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "DBConnessione.ottenereConnesione()", "ManagerIndirizzo.loadRecordFromRs(ResultSet)", "Utility.queryOperazione(Connection,String)", "Utility.eNull(Integer)"], "called_by": ["ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerIndirizzo", "method_name": "ottenereIndirizzoPerId", "params": ["int"]}, "ServletMostraDettagliIndirizzo.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraDettagliIndirizzo", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerIndirizzo.ottenereIndirizzoElenco()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerIndirizzo.ottenereIstanza()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraElencoIndirizzi.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraElencoIndirizzi", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerIndirizzo.ottenereIndirizzoElenco()": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerIndirizzo.loadRecordsFromRs(ResultSet)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerIndirizzo", "method_name": "ottenereIndirizzoElenco", "params": []}, "ServletMostraElencoIndirizzi.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraElencoIndirizzi", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ValoreNonValidoEccezione.getMessage()", "Classe.ottenereAnnoAccademico()", "CampoObbligatorioEccezione.printStackTrace()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "CampoObbligatorioEccezione.getMessage()", "ManagerUtente.eAmministratore(Utente)", "ValoreNonValidoEccezione.printStackTrace()", "ManagerClasse.ottenereIstanza()", "ManagerClasse.eliminare(Classe)", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletEliminaClasse.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletEliminaClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerClasse.ottenereIstanza()": {"calls": [], "called_by": ["ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "ManagerClasse.ottenereClassePerUtenteAnnoAccademico(Utente,int)", "ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerClasse", "method_name": "ottenereIstanza", "params": []}, "Classe.ottenereAnnoAccademico()": {"calls": [], "called_by": ["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "ManagerClasse.esiste(Classe)", "ManagerClasse.ottenereClassePerUtenteAnnoAccademico(Utente,int)", "ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ManagerClasse.inserire(Classe)", "ManagerClasse.aggiornare(Classe)"], "class_name": "Classe", "method_name": "ottenereAnnoAccademico", "params": []}, "ManagerClasse.eliminare(Classe)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.eseguireOperazione(Connection,String)", "DBConnessione.ottenereConnesione()", "Classe.ottenereIdClasse()", "Utility.eNull(Integer)"], "called_by": ["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerClasse", "method_name": "eliminare", "params": ["Classe"]}, "ServletEliminaClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletEliminaClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "Classe.ottenereAnnoAccademico()", "ManagerClasse.esiste(Classe)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "CampoObbligatorioEccezione.getMessage()", "ManagerClasse.inserire(Classe)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "CampoObbligatorioEccezione.printStackTrace()", "Classe.settareAnnoAccademico(int)", "Classe.settareIdIndirizzo(int)", "Classe.settareNome(String)", "EntitaDuplicataEccezione.printStackTrace()", "ManagerClasse.ottenereIstanza()", "ConnessioneEccezione.getMessage()", "EntitaDuplicataEccezione.getMessage()"], "called_by": ["ServletInserireClasse.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletInserireClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Classe.settareNome(String)": {"calls": [], "called_by": ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ManagerClasse.loadRecordFromRs(ResultSet)"], "class_name": "Classe", "method_name": "settareNome", "params": ["String"]}, "Classe.settareAnnoAccademico(int)": {"calls": [], "called_by": ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ManagerClasse.loadRecordFromRs(ResultSet)"], "class_name": "Classe", "method_name": "settareAnnoAccademico", "params": ["int"]}, "Classe.settareIdIndirizzo(int)": {"calls": [], "called_by": ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "ManagerClasse.loadRecordFromRs(ResultSet)"], "class_name": "Classe", "method_name": "settareIdIndirizzo", "params": ["int"]}, "ManagerClasse.esiste(Classe)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Classe.ottenereAnnoAccademico()", "Utility.queryOperazione(Connection,String)", "Classe.ottenereIdIndirizzo()", "DBConnessione.ottenereConnesione()", "Utility.eNull(String)", "Classe.ottenereNome()", "Utility.eNull(Integer)"], "called_by": ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerClasse", "method_name": "esiste", "params": ["Classe"]}, "ManagerClasse.inserire(Classe)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Classe.ottenereAnnoAccademico()", "Utility.eNull(Integer)", "Classe.settareIdClasse(int)", "Classe.ottenereIdIndirizzo()", "Utility.eseguireOperazione(Connection,String)", "DBConnessione.ottenereConnesione()", "Utility.eNull(String)", "Classe.ottenereNome()", "Utility.ottenereValoreMassimo(String,String)"], "called_by": ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerClasse", "method_name": "inserire", "params": ["Classe"]}, "ServletInserireClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletInserireClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerClasse.ottenereClassePerAnnoAccademico(int)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerClasse.ottenereIstanza()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraElencoClasse.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraElencoClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerClasse.ottenereClassePerAnnoAccademico(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerClasse.loadRecordsFromRs(ResultSet)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerClasse", "method_name": "ottenereClassePerAnnoAccademico", "params": ["int"]}, "ServletMostraElencoClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraElencoClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerClasse.ottenereClassePerID(int)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerClasse.ottenereIstanza()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraIDettagliDellaClasse.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraIDettagliDellaClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerClasse.ottenereClassePerID(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerClasse.loadRecordFromRs(ResultSet)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerClasse", "method_name": "ottenereClassePerID", "params": ["int"]}, "ServletMostraIDettagliDellaClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraIDettagliDellaClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerRegistrati.ottenereIstanza()", "Giustificare.settareAnnoAccademico(int)", "CampoObbligatorioEccezione.printStackTrace()", "ManagerRegistrati.aggiornareGiustificare(Giustificare)", "Giustificare.settareDataGiustificare(Date)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "CampoObbligatorioEccezione.getMessage()", "ManagerUtente.eAmministratore(Utente)", "ManagerRegistrati.esiste(Giustificare)", "ConnessioneEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "Utility.String2Date(String)"], "called_by": ["ServletAggiornamentoGiustificato.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletAggiornamentoGiustificato", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerRegistrati.ottenereIstanza()": {"calls": [], "called_by": ["TestRegistrati.main(String[])", "ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "ottenereIstanza", "params": []}, "Giustificare.settareAnnoAccademico(int)": {"calls": [], "called_by": ["TestRegistrati.main(String[])", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ManagerRegistrati.loadJustifyFromRs(ResultSet)"], "class_name": "Giustificare", "method_name": "settareAnnoAccademico", "params": ["int"]}, "Utility.String2Date(String)": {"calls": [], "called_by": ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Utility", "method_name": "String2Date", "params": ["String"]}, "Giustificare.settareDataGiustificare(Date)": {"calls": [], "called_by": ["TestRegistrati.main(String[])", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ManagerRegistrati.loadJustifyFromRs(ResultSet)"], "class_name": "Giustificare", "method_name": "settareDataGiustificare", "params": ["Date"]}, "ManagerRegistrati.esiste(Giustificare)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "DBConnessione.ottenereConnesione()", "Giustificare.ottenereIdGiustificare()", "Utility.queryOperazione(Connection,String)", "Utility.eNull(Integer)"], "called_by": ["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "esiste", "params": ["Giustificare"]}, "ManagerRegistrati.aggiornareGiustificare(Giustificare)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Giustificare.ottenereIdUtente()", "Utility.eNull(Integer)", "Giustificare.ottenereAnnoAccademico()", "Utility.eseguireOperazione(Connection,String)", "Giustificare.ottenereDataGiustificare()", "Utility.eNull(Date)", "Giustificare.ottenereIdGiustificare()", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "aggiornareGiustificare", "params": ["Giustificare"]}, "ServletAggiornamentoGiustificato.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletAggiornamentoGiustificato", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "Classe.ottenereAnnoAccademico()", "ManagerRegistrati.ottenereIstanza()", "ManagerRegistrati.inserireRitardo(Ritardo)", "Classe.ottenereIdClasse()", "Ritardo.settareAnnoAccademico(int)", "VoceElencoUtenti.ottenereId()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ManagerRegistrati.inserireAssenza(Assenza)", "ManagerUtente.eAmministratore(Utente)", "Ritardo.settareDataRitardo(Date)", "ManagerRegistrati.aggiornareRitardo(Ritardo)", "ManagerRegistrati.eliminareRitardo(Ritardo)", "ValoreNonValidoEccezione.printStackTrace()", "Ritardo.settareTempoRitardo(String)", "EntitaNonTrovataEccezione.printStackTrace()", "ValoreNonValidoEccezione.getMessage()", "CampoObbligatorioEccezione.getMessage()", "ManagerRegistrati.avereRitardo(RegistratiLinea)", "Assenza.settareDataAssenza(Date)", "Assenza.settareAnnoAccademico(int)", "RegistratiLinea.ottenereStudente()", "CampoObbligatorioEccezione.printStackTrace()", "ManagerRegistrati.avereAssenza(RegistratiLinea)", "Assenza.settareIdUtente(int)", "ManagerRegistrati.eliminareAssenza(Assenza)", "Ritardo.settareIdUtente(int)", "Assenza.settareIdGiustificare(Integer)", "ConnessioneEccezione.getMessage()", "RegistratiLinea.ottenereAssenza()", "RegistratiLinea.ottenereRitardo()", "ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "Utility.String2Date(String)"], "called_by": ["ServletAggiornareIlRegistro.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletAggiornareIlRegistro", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Classe.ottenereIdClasse()": {"calls": [], "called_by": ["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ManagerClasse.eliminare(Classe)", "ManagerClasse.aggiornare(Classe)", "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Classe", "method_name": "ottenereIdClasse", "params": []}, "ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)": {"calls": ["VoceElencoUtenti.ottenereId()", "RegistratiLinea.settareStudente(VoceElencoUtenti)", "ManagerUtente.ottenereIstanza()", "RegistratiLinea.settareAssenza(Assenza)", "ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)", "RegistratiLinea.settareRitardo(Ritardo)", "ManagerUtente.ottenereStudentePerClasseId(int)", "ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)"], "called_by": ["TestRegistrati.main(String[])", "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "ottenereRegistratiPerClasseIDEData", "params": ["int", "Date"]}, "RegistratiLinea.ottenereStudente()": {"calls": [], "called_by": ["TestRegistrati.main(String[])", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "RegistratiLinea", "method_name": "ottenereStudente", "params": []}, "VoceElencoUtenti.ottenereId()": {"calls": [], "called_by": ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "VoceElencoUtenti", "method_name": "ottenereId", "params": []}, "ManagerRegistrati.avereAssenza(RegistratiLinea)": {"calls": ["RegistratiLinea.ottenereAssenza()"], "called_by": ["TestRegistrati.main(String[])", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "avereAssenza", "params": ["RegistratiLinea"]}, "Assenza.settareAnnoAccademico(int)": {"calls": [], "called_by": ["ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "TestRegistrati.main(String[])", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Assenza", "method_name": "settareAnnoAccademico", "params": ["int"]}, "Assenza.settareDataAssenza(Date)": {"calls": [], "called_by": ["ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "TestRegistrati.main(String[])", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Assenza", "method_name": "settareDataAssenza", "params": ["Date"]}, "Assenza.settareIdGiustificare(Integer)": {"calls": [], "called_by": ["ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "TestRegistrati.main(String[])", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ManagerRegistrati.eliminareGiustificare(int)", "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)"], "class_name": "Assenza", "method_name": "settareIdGiustificare", "params": ["Integer"]}, "Assenza.settareIdUtente(int)": {"calls": [], "called_by": ["ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "TestRegistrati.main(String[])", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Assenza", "method_name": "settareIdUtente", "params": ["int"]}, "ManagerRegistrati.inserireAssenza(Assenza)": {"calls": ["Assenza.settareIdAssenza(int)", "DBConnessione.rilasciareConnessione(Connection)", "Assenza.ottenereAnnoAccademico()", "Utility.ottenereValoreMassimo(String,String)", "Utility.eNull(Integer)", "Assenza.ottenereDataAssenza()", "Utility.eseguireOperazione(Connection,String)", "Assenza.ottenereIdGiustificare()", "Utility.eNull(Date)", "Assenza.ottenereIdUtente()", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "inserireAssenza", "params": ["Assenza"]}, "RegistratiLinea.ottenereAssenza()": {"calls": [], "called_by": ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "ManagerRegistrati.avereAssenza(RegistratiLinea)"], "class_name": "RegistratiLinea", "method_name": "ottenereAssenza", "params": []}, "ManagerRegistrati.eliminareAssenza(Assenza)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.eseguireOperazione(Connection,String)", "DBConnessione.ottenereConnesione()", "Assenza.ottenereIdGiustificare()", "Assenza.ottenereIdAssenza()", "ManagerRegistrati.eliminareGiustificare(int)", "Utility.eNull(Integer)"], "called_by": ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "eliminareAssenza", "params": ["Assenza"]}, "ManagerRegistrati.avereRitardo(RegistratiLinea)": {"calls": ["RegistratiLinea.ottenereRitardo()"], "called_by": ["TestRegistrati.main(String[])", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "avereRitardo", "params": ["RegistratiLinea"]}, "Ritardo.settareAnnoAccademico(int)": {"calls": [], "called_by": ["TestRegistrati.main(String[])", "ManagerRegistrati.loadDelayFromRs(ResultSet)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Ritardo", "method_name": "settareAnnoAccademico", "params": ["int"]}, "Ritardo.settareDataRitardo(Date)": {"calls": [], "called_by": ["TestRegistrati.main(String[])", "ManagerRegistrati.loadDelayFromRs(ResultSet)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Ritardo", "method_name": "settareDataRitardo", "params": ["Date"]}, "Ritardo.settareIdUtente(int)": {"calls": [], "called_by": ["TestRegistrati.main(String[])", "ManagerRegistrati.loadDelayFromRs(ResultSet)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Ritardo", "method_name": "settareIdUtente", "params": ["int"]}, "Ritardo.settareTempoRitardo(String)": {"calls": [], "called_by": ["TestRegistrati.main(String[])", "ManagerRegistrati.loadDelayFromRs(ResultSet)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Ritardo", "method_name": "settareTempoRitardo", "params": ["String"]}, "ManagerRegistrati.inserireRitardo(Ritardo)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.ottenereValoreMassimo(String,String)", "Ritardo.ottenereIdUtente()", "Ritardo.ottenereTempoRitardo()", "Utility.eNull(Integer)", "Ritardo.settareIdRitardo(int)", "Utility.eseguireOperazione(Connection,String)", "Utility.eNull(Date)", "Utility.eNull(String)", "Ritardo.ottenereDataRitardo()", "Ritardo.ottenereAnnoAccademico()", "DBConnessione.ottenereConnesione()"], "called_by": ["TestRegistrati.main(String[])", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "inserireRitardo", "params": ["Ritardo"]}, "RegistratiLinea.ottenereRitardo()": {"calls": [], "called_by": ["ManagerRegistrati.avereRitardo(RegistratiLinea)", "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "RegistratiLinea", "method_name": "ottenereRitardo", "params": []}, "ManagerRegistrati.aggiornareRitardo(Ritardo)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Ritardo.ottenereIdUtente()", "Ritardo.ottenereTempoRitardo()", "Ritardo.ottenereIdRitardo()", "DBConnessione.ottenereConnesione()", "Utility.eseguireOperazione(Connection,String)", "Utility.eNull(Date)", "Utility.eNull(String)", "Ritardo.ottenereDataRitardo()", "Ritardo.ottenereAnnoAccademico()", "Utility.eNull(Integer)"], "called_by": ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "aggiornareRitardo", "params": ["Ritardo"]}, "ManagerRegistrati.eliminareRitardo(Ritardo)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.eseguireOperazione(Connection,String)", "DBConnessione.ottenereConnesione()", "Ritardo.ottenereIdRitardo()", "Utility.eNull(Integer)"], "called_by": ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "eliminareRitardo", "params": ["Ritardo"]}, "ServletAggiornareIlRegistro.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletAggiornareIlRegistro", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerRegistrati.ottenereIstanza()", "CampoObbligatorioEccezione.printStackTrace()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerRegistrati.esiste(Giustificare)", "CampoObbligatorioEccezione.getMessage()", "ManagerRegistrati.eliminareGiustificare(int)", "Giustificare.ottenereIdGiustificare()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletEliminaGiustifica.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletEliminaGiustifica", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Giustificare.ottenereIdGiustificare()": {"calls": [], "called_by": ["ManagerRegistrati.aggiornareGiustificare(Giustificare)", "ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "ManagerRegistrati.esiste(Giustificare)"], "class_name": "Giustificare", "method_name": "ottenereIdGiustificare", "params": []}, "ManagerRegistrati.eliminareGiustificare(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.eseguireOperazione(Connection,String)", "DBConnessione.ottenereConnesione()", "Assenza.settareIdGiustificare(Integer)", "ManagerRegistrati.aggiornareAssenza(Assenza)", "ManagerRegistrati.ottenereAssenzaPerIdGiustificare(int)", "Utility.eNull(Integer)"], "called_by": ["ManagerRegistrati.eliminareAssenza(Assenza)", "ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "eliminareGiustificare", "params": ["int"]}, "ServletEliminaGiustifica.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletEliminaGiustifica", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerRegistrati.eliminareNota(Nota)", "ManagerRegistrati.ottenereIstanza()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletEliminaNota.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletEliminaNota", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerRegistrati.eliminareNota(Nota)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.eseguireOperazione(Connection,String)", "DBConnessione.ottenereConnesione()", "Nota.ottenereIdNota()", "Utility.eNull(Integer)"], "called_by": ["ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "eliminareNota", "params": ["Nota"]}, "ServletEliminaNota.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletEliminaNota", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerRegistrati.ottenereIstanza()", "ManagerRegistrati.esiste(Assenza)", "Giustificare.settareDataGiustificare(Date)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerRegistrati.esiste(Giustificare)", "Utility.String2Date(String)", "Giustificare.settareIdUtente(int)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "Giustificare.settareAnnoAccademico(int)", "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "EntitaDuplicataEccezione.printStackTrace()", "ManagerRegistrati.ottenereAssenzaPerIdAssenza(int)", "ConnessioneEccezione.getMessage()", "EntitaDuplicataEccezione.getMessage()"], "called_by": ["ServletInserireGiustifica.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletInserireGiustifica", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Giustificare.settareIdUtente(int)": {"calls": [], "called_by": ["TestRegistrati.main(String[])", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ManagerRegistrati.loadJustifyFromRs(ResultSet)"], "class_name": "Giustificare", "method_name": "settareIdUtente", "params": ["int"]}, "ManagerRegistrati.ottenereAssenzaPerIdAssenza(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "ottenereAssenzaPerIdAssenza", "params": ["int"]}, "ManagerRegistrati.esiste(Assenza)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "DBConnessione.ottenereConnesione()", "Assenza.ottenereIdAssenza()", "Utility.queryOperazione(Connection,String)", "Utility.eNull(Integer)"], "called_by": ["ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)", "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "ManagerRegistrati.avereGiustificare(Assenza)"], "class_name": "ManagerRegistrati", "method_name": "esiste", "params": ["Assenza"]}, "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)": {"calls": ["Giustificare.settareIdGiustificare(int)", "DBConnessione.rilasciareConnessione(Connection)", "Utility.ottenereValoreMassimo(String,String)", "ManagerRegistrati.aggiornareAssenza(Assenza)", "Giustificare.ottenereIdUtente()", "Utility.eNull(Integer)", "Assenza.settareIdGiustificare(Integer)", "Giustificare.ottenereAnnoAccademico()", "Utility.eseguireOperazione(Connection,String)", "Giustificare.ottenereDataGiustificare()", "Utility.eNull(Date)", "Giustificare.ottenereIdGiustificare()", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "inserireGiustificare", "params": ["Giustificare", "Assenza"]}, "ServletInserireGiustifica.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletInserireGiustifica", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "Classe.ottenereAnnoAccademico()", "ManagerRegistrati.ottenereIstanza()", "Nota.settareDataNota(Date)", "Nota.settareDescrizione(String)", "ConnessioneEccezione.printStackTrace()", "ManagerRegistrati.inserireNota(Nota)", "ManagerUtente.ottenereIstanza()", "Nota.settareInsegnante(String)", "ManagerUtente.eAmministratore(Utente)", "Utility.String2Date(String)", "CampoObbligatorioEccezione.getMessage()", "ValoreNonValidoEccezione.printStackTrace()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "Utente.ottenereId()", "Nota.settareAnnoAccademico(int)", "ConnessioneEccezione.getMessage()", "Nota.settareIdUtente(int)"], "called_by": ["ServletInserisciNuovaNota.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletInserisciNuovaNota", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Utente.ottenereId()": {"calls": [], "called_by": ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)", "ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Utente", "method_name": "ottenereId", "params": []}, "Nota.settareAnnoAccademico(int)": {"calls": [], "called_by": ["ManagerRegistrati.loadNoteFromRs(ResultSet)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "TestRegistrati.main(String[])", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Nota", "method_name": "settareAnnoAccademico", "params": ["int"]}, "Nota.settareDataNota(Date)": {"calls": [], "called_by": ["ManagerRegistrati.loadNoteFromRs(ResultSet)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "TestRegistrati.main(String[])", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Nota", "method_name": "settareDataNota", "params": ["Date"]}, "Nota.settareIdUtente(int)": {"calls": [], "called_by": ["ManagerRegistrati.loadNoteFromRs(ResultSet)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "TestRegistrati.main(String[])", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Nota", "method_name": "settareIdUtente", "params": ["int"]}, "Nota.settareInsegnante(String)": {"calls": [], "called_by": ["ManagerRegistrati.loadNoteFromRs(ResultSet)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "TestRegistrati.main(String[])", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Nota", "method_name": "settareInsegnante", "params": ["String"]}, "Nota.settareDescrizione(String)": {"calls": [], "called_by": ["ManagerRegistrati.loadNoteFromRs(ResultSet)", "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "TestRegistrati.main(String[])", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Nota", "method_name": "settareDescrizione", "params": ["String"]}, "ManagerRegistrati.inserireNota(Nota)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.ottenereValoreMassimo(String,String)", "Nota.ottenereDataNota()", "Nota.ottenereInsegnante()", "Nota.settareIdNota(int)", "DBConnessione.ottenereConnesione()", "Nota.ottenereDescrizione()", "Nota.ottenereAnnoAccademico()", "Utility.eseguireOperazione(Connection,String)", "Utility.eNull(Date)", "Nota.ottenereIdUtente()", "Utility.eNull(String)", "Utility.eNull(Integer)"], "called_by": ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "inserireNota", "params": ["Nota"]}, "ServletInserisciNuovaNota.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletInserisciNuovaNota", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "Classe.ottenereAnnoAccademico()", "ManagerRegistrati.ottenereIstanza()", "ManagerRegistrati.aggiornareNota(Nota)", "Nota.settareDataNota(Date)", "Nota.settareDescrizione(String)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "Nota.settareInsegnante(String)", "ManagerUtente.eAmministratore(Utente)", "ValoreNonValidoEccezione.printStackTrace()", "CampoObbligatorioEccezione.getMessage()", "ManagerRegistrati.ottenereNotaPerId(int)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "Utente.ottenereId()", "Nota.settareAnnoAccademico(int)", "ConnessioneEccezione.getMessage()", "Nota.settareIdNota(int)", "Nota.ottenereIdNota()", "Utility.String2Date(String)", "Nota.settareIdUtente(int)"], "called_by": ["ServletMostraDettagliNota.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraDettagliNota", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerRegistrati.ottenereNotaPerId(int)": {"calls": ["ManagerRegistrati.loadNoteFromRs(ResultSet)", "DBConnessione.rilasciareConnessione(Connection)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "ottenereNotaPerId", "params": ["int"]}, "Nota.ottenereIdNota()": {"calls": [], "called_by": ["ManagerRegistrati.eliminareNota(Nota)", "ManagerRegistrati.aggiornareNota(Nota)", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Nota", "method_name": "ottenereIdNota", "params": []}, "Nota.settareIdNota(int)": {"calls": [], "called_by": ["ManagerRegistrati.loadNoteFromRs(ResultSet)", "ManagerRegistrati.inserireNota(Nota)", "TestRegistrati.main(String[])", "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Nota", "method_name": "settareIdNota", "params": ["int"]}, "ManagerRegistrati.aggiornareNota(Nota)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Nota.ottenereDataNota()", "Nota.ottenereInsegnante()", "DBConnessione.ottenereConnesione()", "Nota.ottenereDescrizione()", "Nota.ottenereAnnoAccademico()", "Utility.eseguireOperazione(Connection,String)", "Utility.eNull(Date)", "Nota.ottenereIdUtente()", "Utility.eNull(String)", "Nota.ottenereIdNota()", "Utility.eNull(Integer)"], "called_by": ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "aggiornareNota", "params": ["Nota"]}, "ServletMostraDettagliNota.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraDettagliNota", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "Classe.ottenereAnnoAccademico()", "ManagerRegistrati.ottenereIstanza()", "ManagerRegistrati.ottenereAssenzaPerIDUtenteEAnnoAccademico(int,int)", "ManagerUtente.eDirettore(Utente)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerUtente.ottenereUtentePerId(int)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraElencoGiustificato.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraElencoGiustificato", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.eDirettore(Utente)": {"calls": [], "called_by": ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "eDirettore", "params": ["Utente"]}, "ManagerUtente.ottenereUtentePerId(int)": {"calls": [], "called_by": ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "ottenereUtentePerId", "params": ["int"]}, "ManagerRegistrati.ottenereAssenzaPerIDUtenteEAnnoAccademico(int,int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "ottenereAssenzaPerIDUtenteEAnnoAccademico", "params": ["int", "int"]}, "ServletMostraElencoGiustificato.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraElencoGiustificato", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "Classe.ottenereAnnoAccademico()", "ManagerRegistrati.ottenereIstanza()", "ManagerUtente.eDirettore(Utente)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ManagerRegistrati.ottenereNotaPerIDUtenteEAnnoAccademico(int,int)", "ManagerUtente.eAmministratore(Utente)", "ManagerUtente.ottenereUtentePerId(int)", "ValoreNonValidoEccezione.printStackTrace()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraElencoNote.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraElencoNote", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerRegistrati.ottenereNotaPerIDUtenteEAnnoAccademico(int,int)": {"calls": ["ManagerRegistrati.loadNoteFromRs(ResultSet)", "DBConnessione.rilasciareConnessione(Connection)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "ottenereNotaPerIDUtenteEAnnoAccademico", "params": ["int", "int"]}, "ServletMostraElencoNote.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraElencoNote", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerClasse.ottenereClassePerAnnoAccademico(int)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerClasse.ottenereIstanza()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraLaGestioneDellaClasse.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraLaGestioneDellaClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraLaGestioneDellaClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraLaGestioneDellaClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["ManagerUtente.ottenereHighlightsStudenteNota(Integer)", "EntitaNonTrovataEccezione.getMessage()", "ManagerUtente.eDirettore(Utente)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerClasse.ottenereAnnoAccademicoElenco()", "ManagerClasse.ottenereIstanza()", "ManagerUtente.ottenereHighlightsStudenteAssenza(Integer)", "ManagerUtente.ottenereUtentePerId(int)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletStatisticheDiCalcolo.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletStatisticheDiCalcolo", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerClasse.ottenereAnnoAccademicoElenco()": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.queryOperazione(Connection,String)", "ManagerClasse.loadIntegersFromRs(ResultSet)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerClasse", "method_name": "ottenereAnnoAccademicoElenco", "params": []}, "ManagerUtente.ottenereHighlightsStudenteAssenza(Integer)": {"calls": [], "called_by": ["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "ottenereHighlightsStudenteAssenza", "params": ["Integer"]}, "ManagerUtente.ottenereHighlightsStudenteNota(Integer)": {"calls": [], "called_by": ["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "ottenereHighlightsStudenteNota", "params": ["Integer"]}, "ServletStatisticheDiCalcolo.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletStatisticheDiCalcolo", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerRegistrati.ottenereIstanza()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerRegistrati.ottenereGiustificarePerIdGiustificare(int)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletVisualizzaDettagliGiustifica.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletVisualizzaDettagliGiustifica", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerRegistrati.ottenereGiustificarePerIdGiustificare(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "DBConnessione.ottenereConnesione()", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "ManagerRegistrati.loadJustifyFromRs(ResultSet)"], "called_by": ["ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerRegistrati", "method_name": "ottenereGiustificarePerIdGiustificare", "params": ["int"]}, "ServletVisualizzaDettagliGiustifica.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletVisualizzaDettagliGiustifica", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerClasse.ottenereClassePerID(int)", "ManagerRegistrati.ottenereIstanza()", "ManagerUtente.eDirettore(Utente)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ConnessioneEccezione.getMessage()", "ManagerClasse.ottenereIstanza()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "Utility.String2Date(String)"], "called_by": ["ServletVisualizzaRegistrati.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletVisualizzaRegistrati", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletVisualizzaRegistrati.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletVisualizzaRegistrati", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerVoto.eliminareVotoPerUtenteIdAnnoTurno(int,int,int)", "EntitaNonTrovataEccezione.printStackTrace()", "VoceElencoUtenti.ottenereId()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerVoto.ottenereIstanza()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletCancellaPagella.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletCancellaPagella", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerVoto.ottenereIstanza()": {"calls": [], "called_by": ["UtenteTest.main(String[])", "ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerVoto", "method_name": "ottenereIstanza", "params": []}, "ManagerVoto.eliminareVotoPerUtenteIdAnnoTurno(int,int,int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.eseguireOperazione(Connection,String)", "Utility.eNull(Integer)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerVoto", "method_name": "eliminareVotoPerUtenteIdAnnoTurno", "params": ["int", "int", "int"]}, "ServletCancellaPagella.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletCancellaPagella", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerInsegnamento.ottenereIstanza()", "Classe.ottenereIdIndirizzo()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletCaricareElencoDiInsegnamento.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletCaricareElencoDiInsegnamento", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Classe.ottenereIdIndirizzo()": {"calls": [], "called_by": ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "ManagerClasse.esiste(Classe)", "ManagerClasse.inserire(Classe)", "ManagerClasse.aggiornare(Classe)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Classe", "method_name": "ottenereIdIndirizzo", "params": []}, "ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerInsegnamento.loadRecordsFromRs(ResultSet)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentiPerClasseId", "params": ["int"]}, "ServletCaricareElencoDiInsegnamento.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletCaricareElencoDiInsegnamento", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerInsegnamento.ottenereIstanza()", "EntitaNonTrovataEccezione.printStackTrace()", "Classe.ottenereIdIndirizzo()", "VoceElencoUtenti.ottenereId()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)", "ManagerUtente.eAmministratore(Utente)", "ValoreNonValidoEccezione.printStackTrace()", "ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "ValoreNonValidoEccezione.getMessage()", "ManagerVoto.ottenereIstanza()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletCaricoPagella.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletCaricoPagella", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerVoto.loadRecordsFromRs(ResultSet)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerVoto", "method_name": "ottenereVotoPerUtenteIdAnnoTurno", "params": ["int", "int", "int"]}, "ServletCaricoPagella.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletCaricoPagella", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "Voto.settareLaboratorio(int)", "Voto.settareInsegnamento(int)", "ManagerVoto.inserire(Voto)", "Insegnamento.ottenereId()", "Voto.settareAnnoAccademico(int)", "VoceElencoUtenti.ottenereId()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "Voto.settareTurno(int)", "EntitaNonTrovataEccezione.printStackTrace()", "ManagerVoto.ottenereIstanza()", "ValoreNonValidoEccezione.getMessage()", "CampoObbligatorioEccezione.printStackTrace()", "Voto.settareScritto(int)", "ManagerInsegnamento.ottenereIstanza()", "Classe.ottenereIdIndirizzo()", "Voto.settareId_utente(int)", "Voto.settareOrale(int)", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletInserirePagella.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletInserirePagella", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Insegnamento.ottenereId()": {"calls": [], "called_by": ["ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "ManagerInsegnamento.eliminare(Insegnamento)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ManagerInsegnamento.avereInsegnante(Insegnamento)", "ManagerInsegnamento.aggiornare(Insegnamento)", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Insegnamento", "method_name": "ottenereId", "params": []}, "Voto.settareAnnoAccademico(int)": {"calls": [], "called_by": ["UtenteTest.main(String[])", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ManagerVoto.loadRecordFromRs(ResultSet)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Voto", "method_name": "settareAnnoAccademico", "params": ["int"]}, "Voto.settareId_utente(int)": {"calls": [], "called_by": ["UtenteTest.main(String[])", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ManagerVoto.loadRecordFromRs(ResultSet)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Voto", "method_name": "settareId_utente", "params": ["int"]}, "Voto.settareLaboratorio(int)": {"calls": [], "called_by": ["UtenteTest.main(String[])", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ManagerVoto.loadRecordFromRs(ResultSet)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Voto", "method_name": "settareLaboratorio", "params": ["int"]}, "Voto.settareOrale(int)": {"calls": [], "called_by": ["UtenteTest.main(String[])", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ManagerVoto.loadRecordFromRs(ResultSet)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Voto", "method_name": "settareOrale", "params": ["int"]}, "Voto.settareInsegnamento(int)": {"calls": [], "called_by": ["UtenteTest.main(String[])", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ManagerVoto.loadRecordFromRs(ResultSet)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Voto", "method_name": "settareInsegnamento", "params": ["int"]}, "Voto.settareTurno(int)": {"calls": [], "called_by": ["UtenteTest.main(String[])", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ManagerVoto.loadRecordFromRs(ResultSet)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Voto", "method_name": "settareTurno", "params": ["int"]}, "Voto.settareScritto(int)": {"calls": [], "called_by": ["UtenteTest.main(String[])", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ManagerVoto.loadRecordFromRs(ResultSet)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Voto", "method_name": "settareScritto", "params": ["int"]}, "ManagerVoto.inserire(Voto)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.ottenereValoreMassimo(String,String)", "Voto.ottenereId_utente()", "Utility.eNull(Integer)", "Voto.ottenereInsegnamento()", "Voto.ottenereLaboratorio()", "Voto.ottenereOrale()", "Voto.ottenereAnnoAccademico()", "Utility.eseguireOperazione(Connection,String)", "Voto.ottenereTurno()", "Voto.settareId_voti(int)", "Voto.ottenereScritto()", "DBConnessione.ottenereConnesione()"], "called_by": ["UtenteTest.main(String[])", "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerVoto", "method_name": "inserire", "params": ["Voto"]}, "ServletInserirePagella.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletInserirePagella", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerClasse.ottenereClassePerID(int)", "ManagerUtente.eDirettore(Utente)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerClasse.ottenereIstanza()", "ManagerUtente.ottenereStudentePerClasseId(int)", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraGliStudentiPerClasse.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraGliStudentiPerClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.ottenereStudentePerClasseId(int)": {"calls": [], "called_by": ["ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "ottenereStudentePerClasseId", "params": ["int"]}, "ServletMostraGliStudentiPerClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraGliStudentiPerClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerClasse.ottenereClassePerAnnoAccademico(int)", "ManagerUtente.eDirettore(Utente)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerClasse.ottenereIstanza()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraLaClassePerAnnoAccademico.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraLaClassePerAnnoAccademico", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraLaClassePerAnnoAccademico.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraLaClassePerAnnoAccademico", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "VoceElencoUtenti.settareNome(String)", "Utente.ottenereEMail()", "Utente.ottenereId()", "VoceElencoUtenti.settareEMail(String)", "EntitaNonTrovataEccezione.printStackTrace()", "ManagerUtente.eDirettore(Utente)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)", "ManagerUtente.eAmministratore(Utente)", "ManagerUtente.ottenereUtentePerId(int)", "Utente.ottenereNome()", "ValoreNonValidoEccezione.printStackTrace()", "ValoreNonValidoEccezione.getMessage()", "ManagerVoto.ottenereIstanza()", "VoceElencoUtenti.settareId(int)", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraPagella.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraPagella", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Utente.ottenereNome()": {"calls": [], "called_by": ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Utente", "method_name": "ottenereNome", "params": []}, "VoceElencoUtenti.settareNome(String)": {"calls": [], "called_by": ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "VoceElencoUtenti", "method_name": "settareNome", "params": ["String"]}, "Utente.ottenereEMail()": {"calls": [], "called_by": ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Utente", "method_name": "ottenereEMail", "params": []}, "VoceElencoUtenti.settareEMail(String)": {"calls": [], "called_by": ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "VoceElencoUtenti", "method_name": "settareEMail", "params": ["String"]}, "VoceElencoUtenti.settareId(int)": {"calls": [], "called_by": ["UtenteTest.main(String[])", "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "VoceElencoUtenti", "method_name": "settareId", "params": ["int"]}, "ServletMostraPagella.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraPagella", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "Voto.settareLaboratorio(int)", "ManagerVoto.eliminare(Voto)", "Voto.settareInsegnamento(int)", "ManagerVoto.inserire(Voto)", "Insegnamento.ottenereId()", "Voto.settareAnnoAccademico(int)", "VoceElencoUtenti.ottenereId()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "Voto.settareTurno(int)", "ManagerVoto.ottenereIstanza()", "EntitaNonTrovataEccezione.printStackTrace()", "ValoreNonValidoEccezione.getMessage()", "ManagerVoto.ottenereVotoPerId(int)", "CampoObbligatorioEccezione.printStackTrace()", "Voto.settareScritto(int)", "ManagerInsegnamento.ottenereIstanza()", "Classe.ottenereIdIndirizzo()", "Voto.settareId_utente(int)", "Voto.settareOrale(int)", "ManagerVoto.aggiornare(Voto)", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletPagellaDiAggiornamento.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletPagellaDiAggiornamento", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Insegnamento.ottenereId()", "Voto.ottenereId_voti()", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "VoceElencoUtenti.ottenereId()", "ManagerVoto.loadRecordFromRs(ResultSet)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerVoto", "method_name": "ottenereIdVoto", "params": ["Insegnamento", "int", "int", "VoceElencoUtenti"]}, "ManagerVoto.ottenereVotoPerId(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "DBConnessione.ottenereConnesione()", "ManagerVoto.loadRecordFromRs(ResultSet)", "Utility.queryOperazione(Connection,String)", "Utility.eNull(Integer)"], "called_by": ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerVoto", "method_name": "ottenereVotoPerId", "params": ["int"]}, "ManagerVoto.aggiornare(Voto)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Voto.ottenereId_utente()", "Voto.ottenereId_voti()", "Voto.ottenereInsegnamento()", "Voto.ottenereLaboratorio()", "Voto.ottenereOrale()", "Voto.ottenereAnnoAccademico()", "DBConnessione.ottenereConnesione()", "Voto.ottenereTurno()", "Utility.eseguireOperazione(Connection,String)", "Voto.ottenereScritto()", "Utility.eNull(Integer)"], "called_by": ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerVoto", "method_name": "aggiornare", "params": ["Voto"]}, "ManagerVoto.eliminare(Voto)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.eseguireOperazione(Connection,String)", "DBConnessione.ottenereConnesione()", "Voto.ottenereId_voti()", "Utility.eNull(Integer)"], "called_by": ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerVoto", "method_name": "eliminare", "params": ["Voto"]}, "ServletPagellaDiAggiornamento.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletPagellaDiAggiornamento", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInizializzazione.init(ServletConfig)": {"calls": ["Utility.settareServerSmtp(String)", "Utility.settarePoolTimeout(int)", "Utility.settarePassword(String)", "Utility.settareTestoAPieDiPagina(String)", "Utility.settareCompletoPathDatabase(String)", "Utility.settareDimensioneMassimaPool(int)", "Utility.settareAttivoTimeout(int)", "Utility.settareUtenteNome(String)", "Utility.settareDriverMySql(String)", "Utility.settareAspettareTimeout(int)"], "called_by": [], "class_name": "ServletInizializzazione", "method_name": "init", "params": ["ServletConfig"]}, "Utility.settareServerSmtp(String)": {"calls": [], "called_by": ["ServletInizializzazione.init(ServletConfig)"], "class_name": "Utility", "method_name": "settareServerSmtp", "params": ["String"]}, "Utility.settareDriverMySql(String)": {"calls": [], "called_by": ["ServletInizializzazione.init(ServletConfig)"], "class_name": "Utility", "method_name": "settareDriverMySql", "params": ["String"]}, "Utility.settareCompletoPathDatabase(String)": {"calls": [], "called_by": ["ServletInizializzazione.init(ServletConfig)"], "class_name": "Utility", "method_name": "settareCompletoPathDatabase", "params": ["String"]}, "Utility.settareUtenteNome(String)": {"calls": [], "called_by": ["ServletInizializzazione.init(ServletConfig)"], "class_name": "Utility", "method_name": "settareUtenteNome", "params": ["String"]}, "Utility.settarePassword(String)": {"calls": [], "called_by": ["ServletInizializzazione.init(ServletConfig)"], "class_name": "Utility", "method_name": "settarePassword", "params": ["String"]}, "Utility.settareDimensioneMassimaPool(int)": {"calls": [], "called_by": ["ServletInizializzazione.init(ServletConfig)"], "class_name": "Utility", "method_name": "settareDimensioneMassimaPool", "params": ["int"]}, "Utility.settareAspettareTimeout(int)": {"calls": [], "called_by": ["ServletInizializzazione.init(ServletConfig)"], "class_name": "Utility", "method_name": "settareAspettareTimeout", "params": ["int"]}, "Utility.settareAttivoTimeout(int)": {"calls": [], "called_by": ["ServletInizializzazione.init(ServletConfig)"], "class_name": "Utility", "method_name": "settareAttivoTimeout", "params": ["int"]}, "Utility.settarePoolTimeout(int)": {"calls": [], "called_by": ["ServletInizializzazione.init(ServletConfig)"], "class_name": "Utility", "method_name": "settarePoolTimeout", "params": ["int"]}, "Utility.settareTestoAPieDiPagina(String)": {"calls": [], "called_by": ["ServletInizializzazione.init(ServletConfig)"], "class_name": "Utility", "method_name": "settareTestoAPieDiPagina", "params": ["String"]}, "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "Insegnamento.ottenereId()", "ConnessioneEccezione.printStackTrace()", "Insegnamento.settareId(int)", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "CampoObbligatorioEccezione.getMessage()", "Insegnamento.settareNome(String)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "CampoObbligatorioEccezione.printStackTrace()", "ManagerInsegnamento.ottenereIstanza()", "ManagerInsegnamento.aggiornare(Insegnamento)", "ManagerInsegnamento.esiste(Insegnamento)", "EntitaDuplicataEccezione.printStackTrace()", "ManagerInsegnamento.ottenereInsegnamentoId(Insegnamento)", "ConnessioneEccezione.getMessage()", "EntitaDuplicataEccezione.getMessage()"], "called_by": ["ServletAggiornamentoInsegnamento.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletAggiornamentoInsegnamento", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Insegnamento.settareNome(String)": {"calls": [], "called_by": ["ManagerInsegnamento.loadRecordFromRs(ResultSet)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Insegnamento", "method_name": "settareNome", "params": ["String"]}, "Insegnamento.settareId(int)": {"calls": [], "called_by": ["UtenteTest.main(String[])", "ManagerInsegnamento.loadRecordFromRs(ResultSet)", "ManagerInsegnamento.inserire(Insegnamento)", "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Insegnamento", "method_name": "settareId", "params": ["int"]}, "ManagerInsegnamento.esiste(Insegnamento)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Insegnamento.ottenereNome()", "Utility.eNull(String)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerInsegnamento", "method_name": "esiste", "params": ["Insegnamento"]}, "ManagerInsegnamento.aggiornare(Insegnamento)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "DBConnessione.ottenereConnesione()", "Utility.eseguireOperazione(Connection,String)", "Insegnamento.ottenereId()", "Insegnamento.ottenereNome()", "Utility.eNull(String)", "Utility.eNull(Integer)"], "called_by": ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerInsegnamento", "method_name": "aggiornare", "params": ["Insegnamento"]}, "ManagerInsegnamento.ottenereInsegnamentoId(Insegnamento)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Insegnamento.ottenereNome()", "Utility.eNull(String)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentoId", "params": ["Insegnamento"]}, "ServletAggiornamentoInsegnamento.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletAggiornamentoInsegnamento", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "CampoObbligatorioEccezione.printStackTrace()", "ManagerInsegnamento.eliminare(Insegnamento)", "ManagerInsegnamento.ottenereIstanza()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "CampoObbligatorioEccezione.getMessage()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletEliminaInsegnamento.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletEliminaInsegnamento", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerInsegnamento.eliminare(Insegnamento)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.eseguireOperazione(Connection,String)", "DBConnessione.ottenereConnesione()", "Insegnamento.ottenereId()", "Utility.eNull(Integer)"], "called_by": ["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerInsegnamento", "method_name": "eliminare", "params": ["Insegnamento"]}, "ServletEliminaInsegnamento.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletEliminaInsegnamento", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "CampoObbligatorioEccezione.printStackTrace()", "ManagerInsegnamento.ottenereIstanza()", "ManagerInsegnamento.inserire(Insegnamento)", "ManagerInsegnamento.esiste(Insegnamento)", "EntitaDuplicataEccezione.printStackTrace()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "CampoObbligatorioEccezione.getMessage()", "Insegnamento.settareNome(String)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()", "EntitaDuplicataEccezione.getMessage()"], "called_by": ["ServletInserireInsegnamento.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletInserireInsegnamento", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerInsegnamento.inserire(Insegnamento)": {"calls": ["Insegnamento.settareId(int)", "Utility.eseguireOperazione(Connection,String)", "Utility.ottenereValoreMassimo(String,String)", "DBConnessione.rilasciareConnessione(Connection)", "Insegnamento.ottenereNome()", "Utility.eNull(String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerInsegnamento", "method_name": "inserire", "params": ["Insegnamento"]}, "ServletInserireInsegnamento.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletInserireInsegnamento", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "ManagerInsegnamento.ottenereIstanza()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraDettagliInsegnamento.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraDettagliInsegnamento", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraDettagliInsegnamento.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraDettagliInsegnamento", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerInsegnamento.ottenereIstanza()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ManagerInsegnamento.ottenereInsegnamenti()", "ManagerUtente.eAmministratore(Utente)", "ValoreNonValidoEccezione.printStackTrace()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraElencoInsegnamenti.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraElencoInsegnamenti", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraElencoInsegnamenti.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraElencoInsegnamenti", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerUtente.ottenereUtentePerLogin(String)", "ManagerUtente.eStudente(Utente)", "ManagerUtente.eInsegnante(Utente)", "ManagerUtente.eGenitore(Utente)", "ManagerUtente.eDirettore(Utente)", "ManagerUtente.login(String,String)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "LoginEccezione.getMessage()", "ManagerUtente.eAmministratore(Utente)", "ValoreNonValidoEccezione.printStackTrace()", "LoginEccezione.printStackTrace()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()", "ManagerUtente.eAtaPersone(Utente)"], "called_by": ["ServletAccesso.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletAccesso", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.ottenereUtentePerLogin(String)": {"calls": [], "called_by": ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "ottenereUtentePerLogin", "params": ["String"]}, "ManagerUtente.login(String,String)": {"calls": [], "called_by": ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "login", "params": ["String", "String"]}, "ManagerUtente.eInsegnante(Utente)": {"calls": [], "called_by": ["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "ManagerClasse.ottenereClassePerInsegnante(Utente)"], "class_name": "ManagerUtente", "method_name": "eInsegnante", "params": ["Utente"]}, "ManagerUtente.eStudente(Utente)": {"calls": [], "called_by": ["ManagerClasse.ottenereClassePerStudente(Utente)", "ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "eStudente", "params": ["Utente"]}, "ManagerUtente.eGenitore(Utente)": {"calls": [], "called_by": ["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "eGenitore", "params": ["Utente"]}, "ManagerUtente.eAtaPersone(Utente)": {"calls": [], "called_by": ["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "eAtaPersone", "params": ["Utente"]}, "LoginEccezione.getMessage()": {"calls": [], "called_by": ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "LoginEccezione", "method_name": "getMessage", "params": []}, "LoginEccezione.printStackTrace()": {"calls": [], "called_by": ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "LoginEccezione", "method_name": "printStackTrace", "params": []}, "ServletAccesso.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletAccesso", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "Utente.settareCell(String)", "Utente.settareNomeDiBattesimo(String)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "Utente.settareCognome(String)", "ManagerUtente.eAmministratore(Utente)", "ValoreNonValidoEccezione.printStackTrace()", "CampoObbligatorioEccezione.getMessage()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "Utente.settareEMail(String)", "Utente.settarePassword(String)", "ManagerUtente.aggiornare(Utente)", "Utente.ottenereId()", "CampoObbligatorioEccezione.printStackTrace()", "ManagerUtente.ottenereUtenteId(Utente)", "ManagerUtente.esiste(Utente)", "EntitaDuplicataEccezione.printStackTrace()", "ManagerUtente.esisteLogin(Utente)", "Utente.settareLogin(String)", "ConnessioneEccezione.getMessage()", "EntitaDuplicataEccezione.getMessage()"], "called_by": ["ServletAggiornamentoUtente.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletAggiornamentoUtente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Utente.settareNomeDiBattesimo(String)": {"calls": [], "called_by": ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Utente", "method_name": "settareNomeDiBattesimo", "params": ["String"]}, "Utente.settareCognome(String)": {"calls": [], "called_by": ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Utente", "method_name": "settareCognome", "params": ["String"]}, "Utente.settareCell(String)": {"calls": [], "called_by": ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Utente", "method_name": "settareCell", "params": ["String"]}, "Utente.settareLogin(String)": {"calls": [], "called_by": ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Utente", "method_name": "settareLogin", "params": ["String"]}, "ManagerUtente.esisteLogin(Utente)": {"calls": [], "called_by": ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "esisteLogin", "params": ["Utente"]}, "Utente.settarePassword(String)": {"calls": [], "called_by": ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Utente", "method_name": "settarePassword", "params": ["String"]}, "Utente.settareEMail(String)": {"calls": [], "called_by": ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Utente", "method_name": "settareEMail", "params": ["String"]}, "ManagerUtente.esiste(Utente)": {"calls": [], "called_by": ["ManagerClasse.ottenereClassePerStudente(Utente)", "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "ManagerClasse.ottenereClassePerInsegnante(Utente)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "esiste", "params": ["Utente"]}, "ManagerUtente.aggiornare(Utente)": {"calls": [], "called_by": ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "aggiornare", "params": ["Utente"]}, "ManagerUtente.ottenereUtenteId(Utente)": {"calls": [], "called_by": ["ManagerClasse.ottenereClassePerStudente(Utente)", "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "ManagerClasse.ottenereClassePerInsegnante(Utente)"], "class_name": "ManagerUtente", "method_name": "ottenereUtenteId", "params": ["Utente"]}, "ServletAggiornamentoUtente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletAggiornamentoUtente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerClasse.ottenereClassePerID(int)", "Utente.ottenereId()", "ManagerUtente.assegnareInsegnanteInClasseInsegnamento(Utente,int,int)", "ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "ManagerInsegnamento.ottenereIstanza()", "ManagerUtente.avereInsegnamento(Utente,Insegnamento,Classe)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerUtente.ottenereUtentePerId(int)", "ManagerClasse.ottenereIstanza()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletAggiungereInsegnamentoComeDocente.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletAggiungereInsegnamentoComeDocente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.avereInsegnamento(Utente,Insegnamento,Classe)": {"calls": [], "called_by": ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "avereInsegnamento", "params": ["Utente", "Insegnamento", "Classe"]}, "ManagerUtente.assegnareInsegnanteInClasseInsegnamento(Utente,int,int)": {"calls": [], "called_by": ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "assegnareInsegnanteInClasseInsegnamento", "params": ["Utente", "int", "int"]}, "ServletAggiungereInsegnamentoComeDocente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletAggiungereInsegnamentoComeDocente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "Utente.ottenereId()", "CampoObbligatorioEccezione.printStackTrace()", "ManagerUtente.ottenereUtenteId(Utente)", "EntitaDuplicataEccezione.getMessage()", "ManagerUtente.esiste(Utente)", "EntitaDuplicataEccezione.printStackTrace()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.esisteLogin(Utente)", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ConnessioneEccezione.getMessage()", "CampoObbligatorioEccezione.getMessage()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "Utente.settarePassword(String)", "ManagerUtente.aggiornare(Utente)"], "called_by": ["ServletAlteraIDatiPersonali.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletAlteraIDatiPersonali", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAlteraIDatiPersonali.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletAlteraIDatiPersonali", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerUtente.eliminareRuolo(Utente,int)", "ManagerUtente.ottenereAmministratori()", "EliminaManagerEccezione.getMessage()", "ManagerUtente.assegnareRuolo(Utente,int)", "EliminaManagerEccezione.printStackTrace()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletAssegnaRuolo.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletAssegnaRuolo", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.ottenereAmministratori()": {"calls": [], "called_by": ["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "ottenereAmministratori", "params": []}, "ManagerUtente.assegnareRuolo(Utente,int)": {"calls": [], "called_by": ["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "assegnareRuolo", "params": ["Utente", "int"]}, "ManagerUtente.eliminareRuolo(Utente,int)": {"calls": [], "called_by": ["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "eliminareRuolo", "params": ["Utente", "int"]}, "EliminaManagerEccezione.getMessage()": {"calls": [], "called_by": ["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "EliminaManagerEccezione", "method_name": "getMessage", "params": []}, "EliminaManagerEccezione.printStackTrace()": {"calls": [], "called_by": ["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "EliminaManagerEccezione", "method_name": "printStackTrace", "params": []}, "ServletAssegnaRuolo.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletAssegnaRuolo", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["ManagerUtente.ottenereStudenti()", "EntitaNonTrovataEccezione.getMessage()", "Utente.ottenereId()", "ManagerUtente.eliminareGenitore(Utente)", "VoceElencoUtenti.ottenereId()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerUtente.ottenereUtentePerId(int)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ManagerUtente.assegnareGenitore(Utente,int)", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletAssegnaStudenteGenitore.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletAssegnaStudenteGenitore", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.ottenereStudenti()": {"calls": [], "called_by": ["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "ottenereStudenti", "params": []}, "ManagerUtente.assegnareGenitore(Utente,int)": {"calls": [], "called_by": ["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "assegnareGenitore", "params": ["Utente", "int"]}, "ManagerUtente.eliminareGenitore(Utente)": {"calls": [], "called_by": ["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "eliminareGenitore", "params": ["Utente"]}, "ServletAssegnaStudenteGenitore.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletAssegnaStudenteGenitore", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerUtente.eliminareStudenteClasse(Utente,int)", "ManagerUtente.assegnareStudenteClasse(Utente,int)", "ManagerClasse.ottenereClassePerUtenteAnnoAccademico(Utente,int)", "Classe.ottenereIdClasse()", "CampoObbligatorioEccezione.printStackTrace()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerClasse.ottenereIstanza()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletAssegnaStudentiInClasse.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletAssegnaStudentiInClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerClasse.ottenereClassePerUtenteAnnoAccademico(Utente,int)": {"calls": ["ManagerClasse.ottenereClassePerStudente(Utente)", "Classe.ottenereAnnoAccademico()", "ManagerClasse.ottenereIstanza()"], "called_by": ["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerClasse", "method_name": "ottenereClassePerUtenteAnnoAccademico", "params": ["Utente", "int"]}, "ManagerUtente.eliminareStudenteClasse(Utente,int)": {"calls": [], "called_by": ["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "eliminareStudenteClasse", "params": ["Utente", "int"]}, "ManagerUtente.assegnareStudenteClasse(Utente,int)": {"calls": [], "called_by": ["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "assegnareStudenteClasse", "params": ["Utente", "int"]}, "ServletAssegnaStudentiInClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletAssegnaStudentiInClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerClasse.ottenereClassePerAnnoAccademico(int)", "ManagerUtente.eDirettore(Utente)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerClasse.ottenereIstanza()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletCaricaClassePerAnnoAccademico.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletCaricaClassePerAnnoAccademico", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletCaricaClassePerAnnoAccademico.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletCaricaClassePerAnnoAccademico", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerUtente.eDirettore(Utente)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerClasse.ottenereAnnoAccademicoElenco()", "ManagerClasse.ottenereIstanza()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletCaricoAnno.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletCaricoAnno", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletCaricoAnno.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletCaricoAnno", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletDisconnettersi.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletDisconnettersi.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletDisconnettersi", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletDisconnettersi.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [], "called_by": ["ServletDisconnettersi.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletDisconnettersi", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerUtente.ottenereAmministratori()", "EliminaAmministratoreEccezione.getMessage()", "CampoObbligatorioEccezione.printStackTrace()", "EliminaAmministratoreEccezione.printStackTrace()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.eliminare(Utente)", "ManagerUtente.ottenereIstanza()", "ManagerUtente.eAmministratore(Utente)", "ValoreNonValidoEccezione.printStackTrace()", "CampoObbligatorioEccezione.getMessage()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletEliminaUtente.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletEliminaUtente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.eliminare(Utente)": {"calls": [], "called_by": ["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "eliminare", "params": ["Utente"]}, "EliminaAmministratoreEccezione.getMessage()": {"calls": [], "called_by": ["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "EliminaAmministratoreEccezione", "method_name": "getMessage", "params": []}, "EliminaAmministratoreEccezione.printStackTrace()": {"calls": [], "called_by": ["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "EliminaAmministratoreEccezione", "method_name": "printStackTrace", "params": []}, "ServletEliminaUtente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletEliminaUtente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "Utente.settareCell(String)", "Utente.settareNomeDiBattesimo(String)", "LoginEccezione.printStackTrace()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "Utente.settareCognome(String)", "ManagerUtente.eAmministratore(Utente)", "ValoreNonValidoEccezione.printStackTrace()", "CampoObbligatorioEccezione.getMessage()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ManagerUtente.inserire(Utente)", "Utente.settareEMail(String)", "Utente.settarePassword(String)", "CampoObbligatorioEccezione.printStackTrace()", "ManagerUtente.esiste(Utente)", "EntitaDuplicataEccezione.printStackTrace()", "ManagerUtente.esisteLogin(Utente)", "LoginEccezione.getMessage()", "Utente.settareLogin(String)", "ConnessioneEccezione.getMessage()", "EntitaDuplicataEccezione.getMessage()"], "called_by": ["ServletInserisciUtente.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletInserisciUtente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.inserire(Utente)": {"calls": [], "called_by": ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "inserire", "params": ["Utente"]}, "ServletInserisciUtente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletInserisciUtente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerUtente.ottenereUtentePerId(int)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraDettagliUtente.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraDettagliUtente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraDettagliUtente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraDettagliUtente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerUtente.ottenereUtenteElenco()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraElencoUtenti.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraElencoUtenti", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.ottenereUtenteElenco()": {"calls": [], "called_by": ["ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "ottenereUtenteElenco", "params": []}, "ServletMostraElencoUtenti.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraElencoUtenti", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerClasse.ottenereClassePerID(int)", "ManagerClasse.ottenereIstanza()", "ManagerInsegnamento.ottenereIstanza()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraInsegnanteModuloPerClasse.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraInsegnanteModuloPerClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraInsegnanteModuloPerClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraInsegnanteModuloPerClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "CampoObbligatorioEccezione.printStackTrace()", "ManagerClasse.ottenereIstanza()", "ManagerUtente.eInsegnante(Utente)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "CampoObbligatorioEccezione.getMessage()", "ManagerClasse.ottenereClassePerInsegnante(Utente)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletMostraModuloDiInsegnamentoUtente.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraModuloDiInsegnamentoUtente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerClasse.ottenereClassePerInsegnante(Utente)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.eNull(Integer)", "ManagerUtente.ottenereUtenteId(Utente)", "Utility.queryOperazione(Connection,String)", "ManagerUtente.eInsegnante(Utente)", "ManagerUtente.esiste(Utente)", "ManagerUtente.ottenereIstanza()", "ManagerClasse.loadRecordsFromRs(ResultSet)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerClasse", "method_name": "ottenereClassePerInsegnante", "params": ["Utente"]}, "ServletMostraModuloDiInsegnamentoUtente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraModuloDiInsegnamentoUtente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "Utility.BooleanToInt(boolean)", "ManagerUtente.eStudente(Utente)", "ManagerUtente.eInsegnante(Utente)", "ManagerUtente.eGenitore(Utente)", "ManagerUtente.eDirettore(Utente)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()", "ManagerUtente.eAtaPersone(Utente)"], "called_by": ["ServletMostraModuloRuoloUtente.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletMostraModuloRuoloUtente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Utility.BooleanToInt(boolean)": {"calls": [], "called_by": ["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "Utility", "method_name": "BooleanToInt", "params": ["boolean"]}, "ServletMostraModuloRuoloUtente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletMostraModuloRuoloUtente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "CampoObbligatorioEccezione.printStackTrace()", "ManagerInsegnamento.ottenereIstanza()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerClasse.ottenereIstanza()", "ValoreNonValidoEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletRapportoInsegnamenti.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletRapportoInsegnamenti", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerClasse.loadRecordsFromRs(ResultSet)", "Utente.ottenereId()", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerClasse", "method_name": "ottenereClassePerInsegnanteAnnoAccademico", "params": ["Utente", "int"]}, "ServletRapportoInsegnamenti.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletRapportoInsegnamenti", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerClasse.ottenereClassePerID(int)", "Utente.ottenereId()", "ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "ManagerInsegnamento.ottenereIstanza()", "ManagerUtente.avereInsegnamento(Utente,Insegnamento,Classe)", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerUtente.ottenereUtentePerId(int)", "ManagerClasse.ottenereIstanza()", "ConnessioneEccezione.getMessage()", "EntitaNonTrovataEccezione.printStackTrace()", "ManagerUtente.eliminareInsegnanteInClasseInsegnamento(Utente,int,int)"], "called_by": ["ServletRimuovereInsegnamentoComeDocente.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletRimuovereInsegnamentoComeDocente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.eliminareInsegnanteInClasseInsegnamento(Utente,int,int)": {"calls": [], "called_by": ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)"], "class_name": "ManagerUtente", "method_name": "eliminareInsegnanteInClasseInsegnamento", "params": ["Utente", "int", "int"]}, "ServletRimuovereInsegnamentoComeDocente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletRimuovereInsegnamentoComeDocente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)": {"calls": ["EntitaNonTrovataEccezione.getMessage()", "ManagerUtente.eliminareStudenteClasse(Utente,int)", "ValoreNonValidoEccezione.getMessage()", "Utente.ottenereId()", "Classe.ottenereIdClasse()", "VoceElencoUtenti.ottenereId()", "ConnessioneEccezione.printStackTrace()", "ManagerUtente.ottenereIstanza()", "ValoreNonValidoEccezione.printStackTrace()", "ManagerUtente.eAmministratore(Utente)", "ManagerClasse.ottenereIstanza()", "ManagerUtente.ottenereStudentePerClasseId(int)", "EntitaNonTrovataEccezione.printStackTrace()", "ConnessioneEccezione.getMessage()"], "called_by": ["ServletRimuoviLaStanzaDellaClasseStudentesca.doPost(HttpServletRequest,HttpServletResponse)"], "class_name": "ServletRimuoviLaStanzaDellaClasseStudentesca", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletRimuoviLaStanzaDellaClasseStudentesca.doPost(HttpServletRequest,HttpServletResponse)": {"calls": ["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)"], "called_by": [], "class_name": "ServletRimuoviLaStanzaDellaClasseStudentesca", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Pagella.ToString()": {"calls": ["Voto.toString()"], "called_by": [], "class_name": "Pagella", "method_name": "ToString", "params": []}, "Voto.toString()": {"calls": [], "called_by": ["Pagella.ToString()"], "class_name": "Voto", "method_name": "toString", "params": []}, "Utente.toString()": {"calls": ["Utente.ottenereNomeDiBattesimo()", "Utente.ottenereCognome()"], "called_by": [], "class_name": "Utente", "method_name": "toString", "params": []}, "Utente.ottenereNomeDiBattesimo()": {"calls": [], "called_by": ["Utente.toString()"], "class_name": "Utente", "method_name": "ottenereNomeDiBattesimo", "params": []}, "Utente.ottenereCognome()": {"calls": [], "called_by": ["Utente.toString()"], "class_name": "Utente", "method_name": "ottenereCognome", "params": []}, "ConnessioneWrapper.cachePreparedStatement(PreparedStatement)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": ["ConnessioneWrapper.prepareStatement(String,int)", "ConnessioneWrapper.prepareStatement(String,int,int,int)", "ConnessioneWrapper.prepareStatement(String,String[])", "ConnessioneWrapper.prepareStatement(String,int,int)", "ConnessioneWrapper.prepareStatement(String)", "ConnessioneWrapper.prepareStatement(String,int[])"], "class_name": "ConnessioneWrapper", "method_name": "cachePreparedStatement", "params": ["PreparedStatement"]}, "PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)": {"calls": [], "called_by": ["ConnessioneWrapper.prepareCall(String)", "ConnessioneWrapper.createStatement(int,int,int)", "ConnessioneWrapper.setAutoCommit(boolean)", "ConnessioneWrapper.prepareCall(String,int,int,int)", "ConnessioneWrapper.isClosed()", "ConnessioneWrapper.getTypeMap()", "ConnessioneWrapper.getMetaData()", "ConnessioneWrapper.setHoldability(int)", "ConnessioneWrapper.commit()", "ConnessioneWrapper.getWarnings()", "ConnessioneWrapper.rollback()", "ConnessioneWrapper.prepareStatement(String,int)", "ConnessioneWrapper.rollback(Savepoint)", "ConnessioneWrapper.getCatalog()", "ConnessioneWrapper.setReadOnly(boolean)", "ConnessioneWrapper.setSavepoint()", "ConnessioneWrapper.setTransactionIsolation(int)", "ConnessioneWrapper.getAutoCommit()", "ConnessioneWrapper.prepareStatement(String,int[])", "ConnessioneWrapper.setCatalog(String)", "ConnessioneWrapper.nativeSQL(String)", "ConnessioneWrapper.isReadOnly()", "ConnessioneWrapper.setSavepoint(String)", "ConnessioneWrapper.createStatement()", "ConnessioneWrapper.prepareCall(String,int,int)", "ConnessioneWrapper.getHoldability()", "ConnessioneWrapper.prepareStatement(String,int,int)", "ConnessioneWrapper.getTransactionIsolation()", "ConnessioneWrapper.prepareStatement(String,int,int,int)", "ConnessioneWrapper.releaseSavepoint(Savepoint)", "ConnessioneWrapper.cacheStatement(Statement)", "ConnessioneWrapper.createStatement(int,int)", "ConnessioneWrapper.prepareStatement(String)", "ConnessioneWrapper.cachePreparedStatement(PreparedStatement)", "ConnessioneWrapper.prepareStatement(String,String[])"], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "settareUltimaVolta", "params": ["Connection"]}, "ConnessioneWrapper.cacheStatement(Statement)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": ["ConnessioneWrapper.createStatement(int,int)", "ConnessioneWrapper.createStatement(int,int,int)", "ConnessioneWrapper.createStatement()"], "class_name": "ConnessioneWrapper", "method_name": "cacheStatement", "params": ["Statement"]}, "ConnessioneWrapper.close()": {"calls": ["ConnessioneWrapper.closeAndReleaseStatements()", "PoolDiConnessioneDataSorgente.rilasciare(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "close", "params": []}, "ConnessioneWrapper.closeAndReleaseStatements()": {"calls": [], "called_by": ["ConnessioneWrapper.chiudereConnessioneAvvolta()", "ConnessioneWrapper.close()"], "class_name": "ConnessioneWrapper", "method_name": "closeAndReleaseStatements", "params": []}, "PoolDiConnessioneDataSorgente.rilasciare(Connection)": {"calls": [], "called_by": ["ConnessioneWrapper.close()", "DBConnessione.rilasciareConnessione(Connection)", "PoolDiConnessioneDataSorgente.clearActive()", "ControlloConnessione.run()"], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "rilasciare", "params": ["Connection"]}, "ConnessioneWrapper.chiudereConnessioneAvvolta()": {"calls": ["ConnessioneWrapper.closeAndReleaseStatements()"], "called_by": ["PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioni(List)", "ConnessioneWrapper.finalize()"], "class_name": "ConnessioneWrapper", "method_name": "chiudereConnessioneAvvolta", "params": []}, "ConnessioneWrapper.commit()": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "commit", "params": []}, "ConnessioneWrapper.createStatement()": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "ConnessioneWrapper.cacheStatement(Statement)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "createStatement", "params": []}, "ConnessioneWrapper.createStatement(int,int)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "ConnessioneWrapper.cacheStatement(Statement)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "createStatement", "params": ["int", "int"]}, "ConnessioneWrapper.createStatement(int,int,int)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "ConnessioneWrapper.cacheStatement(Statement)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "createStatement", "params": ["int", "int", "int"]}, "ConnessioneWrapper.finalize()": {"calls": ["ConnessioneWrapper.chiudereConnessioneAvvolta()"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "finalize", "params": []}, "ConnessioneWrapper.getAutoCommit()": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "getAutoCommit", "params": []}, "ConnessioneWrapper.getCatalog()": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "getCatalog", "params": []}, "ConnessioneWrapper.getHoldability()": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "getHoldability", "params": []}, "ConnessioneWrapper.getMetaData()": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "getMetaData", "params": []}, "ConnessioneWrapper.getTransactionIsolation()": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "getTransactionIsolation", "params": []}, "ConnessioneWrapper.getTypeMap()": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "getTypeMap", "params": []}, "ConnessioneWrapper.getWarnings()": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "getWarnings", "params": []}, "ConnessioneWrapper.isClosed()": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "isClosed", "params": []}, "ConnessioneWrapper.isReadOnly()": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "isReadOnly", "params": []}, "ConnessioneWrapper.nativeSQL(String)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "nativeSQL", "params": ["String"]}, "ConnessioneWrapper.prepareCall(String)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareCall", "params": ["String"]}, "ConnessioneWrapper.prepareCall(String,int,int)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareCall", "params": ["String", "int", "int"]}, "ConnessioneWrapper.prepareCall(String,int,int,int)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareCall", "params": ["String", "int", "int", "int"]}, "ConnessioneWrapper.prepareStatement(String)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "ConnessioneWrapper.cachePreparedStatement(PreparedStatement)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareStatement", "params": ["String"]}, "ConnessioneWrapper.prepareStatement(String,int)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "ConnessioneWrapper.cachePreparedStatement(PreparedStatement)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareStatement", "params": ["String", "int"]}, "ConnessioneWrapper.prepareStatement(String,int,int)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "ConnessioneWrapper.cachePreparedStatement(PreparedStatement)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareStatement", "params": ["String", "int", "int"]}, "ConnessioneWrapper.prepareStatement(String,int,int,int)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "ConnessioneWrapper.cachePreparedStatement(PreparedStatement)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareStatement", "params": ["String", "int", "int", "int"]}, "ConnessioneWrapper.prepareStatement(String,int[])": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "ConnessioneWrapper.cachePreparedStatement(PreparedStatement)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareStatement", "params": ["String", "int[]"]}, "ConnessioneWrapper.prepareStatement(String,String[])": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "ConnessioneWrapper.cachePreparedStatement(PreparedStatement)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareStatement", "params": ["String", "String[]"]}, "ConnessioneWrapper.releaseSavepoint(Savepoint)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "releaseSavepoint", "params": ["Savepoint"]}, "ConnessioneWrapper.rollback()": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "rollback", "params": []}, "ConnessioneWrapper.rollback(Savepoint)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "rollback", "params": ["Savepoint"]}, "ConnessioneWrapper.setAutoCommit(boolean)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "setAutoCommit", "params": ["boolean"]}, "ConnessioneWrapper.setCatalog(String)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "setCatalog", "params": ["String"]}, "ConnessioneWrapper.setHoldability(int)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "setHoldability", "params": ["int"]}, "ConnessioneWrapper.setReadOnly(boolean)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "setReadOnly", "params": ["boolean"]}, "ConnessioneWrapper.setSavepoint()": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "setSavepoint", "params": []}, "ConnessioneWrapper.setSavepoint(String)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "setSavepoint", "params": ["String"]}, "ConnessioneWrapper.setTransactionIsolation(int)": {"calls": ["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)"], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "setTransactionIsolation", "params": ["int"]}, "ControlloConnessione.run()": {"calls": ["PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioniInPool()", "ControlloConnessione.setPriority(int)", "PoolDiConnessioneDataSorgente.clearActive()", "PoolDiConnessioneDataSorgente.dimensioneAttiva()", "PoolDiConnessioneDataSorgente.rilasciare(Connection)", "PoolDiConnessioneDataSorgente.getConnection()"], "called_by": [], "class_name": "ControlloConnessione", "method_name": "run", "params": []}, "PoolDiConnessioneDataSorgente.dimensioneAttiva()": {"calls": [], "called_by": ["PoolDiConnessioneDataSorgente.toString()", "ControlloConnessione.run()"], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "dimensioneAttiva", "params": []}, "ControlloConnessione.setPriority(int)": {"calls": [], "called_by": ["ControlloConnessione.run()"], "class_name": "ControlloConnessione", "method_name": "setPriority", "params": ["int"]}, "PoolDiConnessioneDataSorgente.clearActive()": {"calls": ["PoolDiConnessioneDataSorgente.rilasciare(Connection)"], "called_by": ["ControlloConnessione.run()"], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "clearActive", "params": []}, "PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioniInPool()": {"calls": ["PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioni(List)"], "called_by": ["ControlloConnessione.run()"], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "chiudiTutteLeConnessioniInPool", "params": []}, "PoolDiConnessioneDataSorgente.getConnection()": {"calls": ["PoolDiConnessioneDataSorgente.createNewConnection()", "PoolDiConnessioneDataSorgente.getPooledConnection(int)"], "called_by": ["DBConnessione.ottenereConnesione()", "ControlloConnessione.run()"], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "getConnection", "params": []}, "DBConnessione.<clinit>()": {"calls": ["Utility.ottenereCompletoPathDatabase()", "Utility.ottenereDimensioneMassimaPool()", "Utility.ottenereUtenteNome()", "Utility.ottenerePoolTimeout()", "Ambiente.ottenerePoolPropertiesPath()", "Utility.ottenereDriverMySql()", "DBConnessione.loadPool()", "Utility.ottenereAspettareTimeout()", "Utility.ottenereAttivoTimeout()", "Utility.ottenerePassword()"], "called_by": [], "class_name": "DBConnessione", "method_name": "<clinit>", "params": []}, "Ambiente.ottenerePoolPropertiesPath()": {"calls": [], "called_by": ["DBConnessione.<clinit>()"], "class_name": "Ambiente", "method_name": "ottenerePoolPropertiesPath", "params": []}, "Utility.ottenereDriverMySql()": {"calls": [], "called_by": ["DBConnessione.<clinit>()"], "class_name": "Utility", "method_name": "ottenereDriverMySql", "params": []}, "Utility.ottenereCompletoPathDatabase()": {"calls": [], "called_by": ["DBConnessione.<clinit>()"], "class_name": "Utility", "method_name": "ottenereCompletoPathDatabase", "params": []}, "Utility.ottenereUtenteNome()": {"calls": [], "called_by": ["DBConnessione.<clinit>()"], "class_name": "Utility", "method_name": "ottenereUtenteNome", "params": []}, "Utility.ottenerePassword()": {"calls": [], "called_by": ["DBConnessione.<clinit>()"], "class_name": "Utility", "method_name": "ottenerePassword", "params": []}, "Utility.ottenereDimensioneMassimaPool()": {"calls": [], "called_by": ["DBConnessione.<clinit>()"], "class_name": "Utility", "method_name": "ottenereDimensioneMassimaPool", "params": []}, "Utility.ottenereAspettareTimeout()": {"calls": [], "called_by": ["DBConnessione.<clinit>()"], "class_name": "Utility", "method_name": "ottenereAspettareTimeout", "params": []}, "Utility.ottenereAttivoTimeout()": {"calls": [], "called_by": ["DBConnessione.<clinit>()"], "class_name": "Utility", "method_name": "ottenereAttivoTimeout", "params": []}, "Utility.ottenerePoolTimeout()": {"calls": [], "called_by": ["DBConnessione.<clinit>()"], "class_name": "Utility", "method_name": "ottenerePoolTimeout", "params": []}, "DBConnessione.loadPool()": {"calls": ["ControlloConnessione.start()", "PoolDiConnessioneDataSorgente.settareAttivoTimeout(long)"], "called_by": ["DBConnessione.<clinit>()"], "class_name": "DBConnessione", "method_name": "loadPool", "params": []}, "DBConnessione.ottenereConnesione()": {"calls": ["PoolDiConnessioneDataSorgente.getConnection()"], "called_by": ["ManagerRegistrati.eliminareGiustificare(int)", "ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ManagerVoto.eliminare(Voto)", "ManagerClasse.aggiornare(Classe)", "ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "ManagerInsegnamento.eliminare(Insegnamento)", "ManagerRegistrati.eliminareAssenza(Assenza)", "ManagerIndirizzo.elimina(Indirizzo)", "ManagerInsegnamento.ottenereInsegnamentiPerIdUtenteIdClasse(int,int)", "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "ManagerInsegnamento.esiste(Insegnamento)", "ManagerInsegnamento.ottenereInsegnamentiPerUtenteId(int)", "ManagerVoto.ottenereInsegnamentoIdPerVotoId(int)", "ManagerIndirizzo.esiste(Indirizzo)", "ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)", "Utility.ottenereValoreMassimo(String,String)", "ManagerInsegnamento.ottenereInsegnamentoId(Insegnamento)", "ManagerRegistrati.ottenereRitardoPerId(int)", "ManagerIndirizzo.ottenereNomeIndirizzoPerId(int)", "ManagerVoto.aggiornare(Voto)", "ManagerVoto.inserire(Voto)", "ManagerClasse.ottenereClassePerStudente(Utente)", "ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "ManagerIndirizzo.ottenereIndirizzoElenco()", "ManagerIndirizzo.inserire(Indirizzo)", "ManagerRegistrati.aggiornareRitardo(Ritardo)", "ManagerInsegnamento.ottenereInsegnamentoNomePerId(int)", "ManagerRegistrati.esiste(Giustificare)", "ManagerVoto.ottenereVoto()", "ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ManagerRegistrati.ottenereGiustificarePerIdGiustificare(int)", "ManagerIndirizzo.ottenereIndirizzoId(Indirizzo)", "ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)", "ManagerIndirizzo.ottenereIndirizzoPerId(int)", "ManagerVoto.ottenereVotoPerUtenteId(int)", "ManagerVoto.eliminareVotoPerUtenteIdAnnoTurno(int,int,int)", "ManagerVoto.ottenereVotoPerId(int)", "ManagerRegistrati.ottenereAssenzaPerIDUtenteEAnnoAccademico(int,int)", "ManagerInsegnamento.aggiornare(Insegnamento)", "ManagerRegistrati.aggiornareGiustificare(Giustificare)", "ManagerInsegnamento.inserire(Insegnamento)", "ManagerInsegnamento.avereInsegnante(Insegnamento)", "ManagerRegistrati.ottenereNotaPerId(int)", "ManagerVoto.esiste(Voto)", "ManagerClasse.ottenereClassePerInsegnante(Utente)", "ManagerRegistrati.ottenereAssenzaPerIdAssenza(int)", "ManagerClasse.ottenereClassePerID(int)", "ManagerRegistrati.esiste(Ritardo)", "ManagerRegistrati.ottenereAssenzaPerIdGiustificare(int)", "ManagerRegistrati.esiste(Assenza)", "ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "ManagerRegistrati.eliminareNota(Nota)", "ManagerRegistrati.inserireRitardo(Ritardo)", "ManagerClasse.esiste(Classe)", "ManagerRegistrati.aggiornareAssenza(Assenza)", "ManagerClasse.ottenereClassePerAnnoAccademico(int)", "ManagerIndirizzo.ottenereInsegnamentiIndirizzo(int)", "ManagerInsegnamento.ottenereInsegnamentiPerClasseNome(String)", "ManagerInsegnamento.ottenereInsegnamentiPerUtenteClasseID(int,int)", "ManagerRegistrati.inserireNota(Nota)", "ManagerInsegnamento.ottenereInsegnamenti()", "ManagerRegistrati.inserireAssenza(Assenza)", "ManagerRegistrati.eliminareRitardo(Ritardo)", "ManagerRegistrati.aggiornareNota(Nota)", "ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)", "ManagerRegistrati.ottenereNotaPerIDUtenteEAnnoAccademico(int,int)", "ManagerClasse.eliminare(Classe)", "ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)", "ManagerClasse.ottenereAnnoAccademicoElenco()", "ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)", "ManagerClasse.inserire(Classe)"], "class_name": "DBConnessione", "method_name": "ottenereConnesione", "params": []}, "PoolDiConnessioneDataSorgente.settareAttivoTimeout(long)": {"calls": [], "called_by": ["DBConnessione.loadPool()"], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "settareAttivoTimeout", "params": ["long"]}, "ControlloConnessione.start()": {"calls": [], "called_by": ["DBConnessione.loadPool()"], "class_name": "ControlloConnessione", "method_name": "start", "params": []}, "DBConnessione.rilasciareConnessione(Connection)": {"calls": ["PoolDiConnessioneDataSorgente.rilasciare(Connection)"], "called_by": ["ManagerRegistrati.eliminareGiustificare(int)", "ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ManagerVoto.eliminare(Voto)", "ManagerClasse.aggiornare(Classe)", "ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "ManagerInsegnamento.eliminare(Insegnamento)", "ManagerRegistrati.eliminareAssenza(Assenza)", "ManagerIndirizzo.elimina(Indirizzo)", "ManagerInsegnamento.ottenereInsegnamentiPerIdUtenteIdClasse(int,int)", "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "ManagerInsegnamento.esiste(Insegnamento)", "ManagerInsegnamento.ottenereInsegnamentiPerUtenteId(int)", "ManagerVoto.ottenereInsegnamentoIdPerVotoId(int)", "ManagerIndirizzo.esiste(Indirizzo)", "ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)", "Utility.ottenereValoreMassimo(String,String)", "ManagerInsegnamento.ottenereInsegnamentoId(Insegnamento)", "ManagerRegistrati.ottenereRitardoPerId(int)", "ManagerIndirizzo.ottenereNomeIndirizzoPerId(int)", "ManagerVoto.aggiornare(Voto)", "ManagerVoto.inserire(Voto)", "ManagerClasse.ottenereClassePerStudente(Utente)", "ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "ManagerIndirizzo.ottenereIndirizzoElenco()", "ManagerIndirizzo.inserire(Indirizzo)", "ManagerRegistrati.aggiornareRitardo(Ritardo)", "ManagerInsegnamento.ottenereInsegnamentoNomePerId(int)", "ManagerRegistrati.esiste(Giustificare)", "ManagerVoto.ottenereVoto()", "ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ManagerRegistrati.ottenereGiustificarePerIdGiustificare(int)", "ManagerIndirizzo.ottenereIndirizzoId(Indirizzo)", "ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)", "ManagerIndirizzo.ottenereIndirizzoPerId(int)", "ManagerVoto.ottenereVotoPerUtenteId(int)", "ManagerVoto.eliminareVotoPerUtenteIdAnnoTurno(int,int,int)", "ManagerVoto.ottenereVotoPerId(int)", "ManagerRegistrati.ottenereAssenzaPerIDUtenteEAnnoAccademico(int,int)", "ManagerInsegnamento.aggiornare(Insegnamento)", "ManagerRegistrati.aggiornareGiustificare(Giustificare)", "ManagerInsegnamento.inserire(Insegnamento)", "ManagerInsegnamento.avereInsegnante(Insegnamento)", "ManagerRegistrati.ottenereNotaPerId(int)", "ManagerVoto.esiste(Voto)", "ManagerClasse.ottenereClassePerInsegnante(Utente)", "ManagerRegistrati.ottenereAssenzaPerIdAssenza(int)", "ManagerClasse.ottenereClassePerID(int)", "ManagerRegistrati.esiste(Ritardo)", "ManagerRegistrati.ottenereAssenzaPerIdGiustificare(int)", "ManagerRegistrati.esiste(Assenza)", "ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "ManagerRegistrati.eliminareNota(Nota)", "ManagerRegistrati.inserireRitardo(Ritardo)", "ManagerClasse.esiste(Classe)", "ManagerRegistrati.aggiornareAssenza(Assenza)", "ManagerClasse.ottenereClassePerAnnoAccademico(int)", "ManagerIndirizzo.ottenereInsegnamentiIndirizzo(int)", "ManagerInsegnamento.ottenereInsegnamentiPerClasseNome(String)", "ManagerInsegnamento.ottenereInsegnamentiPerUtenteClasseID(int,int)", "ManagerRegistrati.inserireNota(Nota)", "ManagerInsegnamento.ottenereInsegnamenti()", "ManagerRegistrati.inserireAssenza(Assenza)", "ManagerRegistrati.eliminareRitardo(Ritardo)", "ManagerRegistrati.aggiornareNota(Nota)", "ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)", "ManagerRegistrati.ottenereNotaPerIDUtenteEAnnoAccademico(int,int)", "ManagerClasse.eliminare(Classe)", "ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)", "ManagerClasse.ottenereAnnoAccademicoElenco()", "ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)", "ManagerClasse.inserire(Classe)"], "class_name": "DBConnessione", "method_name": "rilasciareConnessione", "params": ["Connection"]}, "PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioni()": {"calls": ["PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioni(List)"], "called_by": [], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "chiudiTutteLeConnessioni", "params": []}, "PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioni(List)": {"calls": ["ConnessioneWrapper.chiudereConnessioneAvvolta()"], "called_by": ["PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioniInPool()", "PoolDiConnessioneDataSorgente.access$1(PoolDiConnessioneDataSorgente,List)", "PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioni()"], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "chiudiTutteLeConnessioni", "params": ["List"]}, "PoolDiConnessioneDataSorgente.getPooledConnection(int)": {"calls": [], "called_by": ["PoolDiConnessioneDataSorgente.getConnection()"], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "getPooledConnection", "params": ["int"]}, "PoolDiConnessioneDataSorgente.createNewConnection()": {"calls": [], "called_by": ["PoolDiConnessioneDataSorgente.getConnection()"], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "createNewConnection", "params": []}, "PoolDiConnessioneDataSorgente.toString()": {"calls": ["PoolDiConnessioneDataSorgente.dimensioneAttiva()", "PoolDiConnessioneDataSorgente.poolDimensione()"], "called_by": [], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "toString", "params": []}, "PoolDiConnessioneDataSorgente.poolDimensione()": {"calls": [], "called_by": ["PoolDiConnessioneDataSorgente.toString()"], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "poolDimensione", "params": []}, "PoolDiConnessioneDataSorgente.access$1(PoolDiConnessioneDataSorgente,List)": {"calls": ["PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioni(List)"], "called_by": [], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "access$1", "params": ["PoolDiConnessioneDataSorgente", "List"]}, "Classe.ottenereNome()": {"calls": [], "called_by": ["ManagerClasse.aggiornare(Classe)", "ManagerClasse.esiste(Classe)", "ManagerClasse.inserire(Classe)"], "class_name": "Classe", "method_name": "ottenereNome", "params": []}, "Utility.eNull(String)": {"calls": ["Utility.sostituireTuttoStrings(String,String,String)"], "called_by": ["ManagerInsegnamento.ottenereInsegnamentoId(Insegnamento)", "ManagerIndirizzo.ottenereIndirizzoId(Indirizzo)", "ManagerClasse.aggiornare(Classe)", "ManagerRegistrati.inserireRitardo(Ritardo)", "ManagerClasse.esiste(Classe)", "ManagerRegistrati.aggiornareNota(Nota)", "ManagerInsegnamento.aggiornare(Insegnamento)", "ManagerInsegnamento.ottenereInsegnamentiPerClasseNome(String)", "ManagerRegistrati.inserireNota(Nota)", "ManagerInsegnamento.inserire(Insegnamento)", "ManagerInsegnamento.esiste(Insegnamento)", "ManagerIndirizzo.inserire(Indirizzo)", "ManagerRegistrati.aggiornareRitardo(Ritardo)", "ManagerIndirizzo.esiste(Indirizzo)", "ManagerClasse.inserire(Classe)"], "class_name": "Utility", "method_name": "eNull", "params": ["String"]}, "Utility.eNull(Integer)": {"calls": [], "called_by": ["ManagerRegistrati.eliminareGiustificare(int)", "ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ManagerVoto.eliminare(Voto)", "ManagerClasse.aggiornare(Classe)", "ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "ManagerInsegnamento.eliminare(Insegnamento)", "ManagerRegistrati.eliminareAssenza(Assenza)", "ManagerIndirizzo.elimina(Indirizzo)", "ManagerInsegnamento.ottenereInsegnamentiPerIdUtenteIdClasse(int,int)", "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "ManagerInsegnamento.ottenereInsegnamentiPerUtenteId(int)", "ManagerVoto.ottenereInsegnamentoIdPerVotoId(int)", "ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)", "ManagerRegistrati.ottenereRitardoPerId(int)", "ManagerIndirizzo.ottenereNomeIndirizzoPerId(int)", "ManagerVoto.aggiornare(Voto)", "ManagerVoto.inserire(Voto)", "ManagerClasse.ottenereClassePerStudente(Utente)", "ManagerRegistrati.aggiornareRitardo(Ritardo)", "ManagerRegistrati.esiste(Giustificare)", "ManagerInsegnamento.ottenereInsegnamentoNomePerId(int)", "ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ManagerRegistrati.ottenereGiustificarePerIdGiustificare(int)", "ManagerIndirizzo.ottenereIndirizzoPerId(int)", "ManagerVoto.ottenereVotoPerUtenteId(int)", "ManagerVoto.eliminareVotoPerUtenteIdAnnoTurno(int,int,int)", "ManagerVoto.ottenereVotoPerId(int)", "ManagerRegistrati.ottenereAssenzaPerIDUtenteEAnnoAccademico(int,int)", "ManagerInsegnamento.aggiornare(Insegnamento)", "ManagerRegistrati.aggiornareGiustificare(Giustificare)", "ManagerInsegnamento.avereInsegnante(Insegnamento)", "ManagerRegistrati.ottenereNotaPerId(int)", "ManagerVoto.esiste(Voto)", "ManagerClasse.ottenereClassePerInsegnante(Utente)", "ManagerRegistrati.ottenereAssenzaPerIdAssenza(int)", "ManagerClasse.ottenereClassePerID(int)", "ManagerRegistrati.esiste(Ritardo)", "ManagerRegistrati.ottenereAssenzaPerIdGiustificare(int)", "ManagerRegistrati.esiste(Assenza)", "ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "ManagerRegistrati.eliminareNota(Nota)", "ManagerRegistrati.inserireRitardo(Ritardo)", "ManagerClasse.esiste(Classe)", "ManagerRegistrati.aggiornareAssenza(Assenza)", "ManagerClasse.ottenereClassePerAnnoAccademico(int)", "ManagerIndirizzo.ottenereInsegnamentiIndirizzo(int)", "ManagerRegistrati.aggiornareNota(Nota)", "ManagerInsegnamento.ottenereInsegnamentiPerUtenteClasseID(int,int)", "ManagerRegistrati.inserireNota(Nota)", "ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)", "ManagerRegistrati.inserireAssenza(Assenza)", "ManagerRegistrati.eliminareRitardo(Ritardo)", "ManagerRegistrati.ottenereNotaPerIDUtenteEAnnoAccademico(int,int)", "ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)", "ManagerClasse.eliminare(Classe)", "ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)", "ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)", "ManagerClasse.inserire(Classe)"], "class_name": "Utility", "method_name": "eNull", "params": ["Integer"]}, "Utility.queryOperazione(Connection,String)": {"calls": [], "called_by": ["ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "ManagerInsegnamento.ottenereInsegnamentiPerIdUtenteIdClasse(int,int)", "ManagerInsegnamento.esiste(Insegnamento)", "ManagerInsegnamento.ottenereInsegnamentiPerUtenteId(int)", "ManagerVoto.ottenereInsegnamentoIdPerVotoId(int)", "ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)", "Utility.ottenereValoreMassimo(String,String)", "ManagerInsegnamento.ottenereInsegnamentoId(Insegnamento)", "ManagerRegistrati.ottenereRitardoPerId(int)", "ManagerIndirizzo.ottenereNomeIndirizzoPerId(int)", "ManagerClasse.ottenereClassePerStudente(Utente)", "ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "ManagerIndirizzo.ottenereIndirizzoElenco()", "ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)", "ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "ManagerRegistrati.esiste(Giustificare)", "ManagerInsegnamento.ottenereInsegnamentoNomePerId(int)", "ManagerVoto.ottenereVoto()", "ManagerRegistrati.ottenereGiustificarePerIdGiustificare(int)", "ManagerIndirizzo.ottenereIndirizzoId(Indirizzo)", "ManagerIndirizzo.ottenereIndirizzoPerId(int)", "ManagerVoto.ottenereVotoPerUtenteId(int)", "ManagerVoto.ottenereVotoPerId(int)", "ManagerRegistrati.ottenereAssenzaPerIDUtenteEAnnoAccademico(int,int)", "ManagerInsegnamento.avereInsegnante(Insegnamento)", "ManagerVoto.esiste(Voto)", "ManagerClasse.ottenereClassePerInsegnante(Utente)", "ManagerRegistrati.ottenereAssenzaPerIdAssenza(int)", "ManagerClasse.ottenereClassePerID(int)", "ManagerRegistrati.esiste(Ritardo)", "ManagerRegistrati.ottenereAssenzaPerIdGiustificare(int)", "ManagerRegistrati.esiste(Assenza)", "ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "ManagerClasse.esiste(Classe)", "ManagerClasse.ottenereClassePerAnnoAccademico(int)", "ManagerIndirizzo.ottenereInsegnamentiIndirizzo(int)", "ManagerInsegnamento.ottenereInsegnamentiPerClasseNome(String)", "ManagerInsegnamento.ottenereInsegnamentiPerUtenteClasseID(int,int)", "ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)", "ManagerInsegnamento.ottenereInsegnamenti()", "ManagerRegistrati.ottenereNotaPerIDUtenteEAnnoAccademico(int,int)", "ManagerRegistrati.ottenereNotaPerId(int)", "ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)", "ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)", "ManagerClasse.ottenereAnnoAccademicoElenco()", "ManagerIndirizzo.esiste(Indirizzo)"], "class_name": "Utility", "method_name": "queryOperazione", "params": ["Connection", "String"]}, "Utility.eseguireOperazione(Connection,String)": {"calls": [], "called_by": ["ManagerRegistrati.eliminareGiustificare(int)", "ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ManagerClasse.aggiornare(Classe)", "ManagerInsegnamento.eliminare(Insegnamento)", "ManagerRegistrati.eliminareAssenza(Assenza)", "ManagerVoto.eliminareVotoPerUtenteIdAnnoTurno(int,int,int)", "ManagerIndirizzo.elimina(Indirizzo)", "ManagerInsegnamento.aggiornare(Insegnamento)", "ManagerRegistrati.aggiornareGiustificare(Giustificare)", "ManagerInsegnamento.inserire(Insegnamento)", "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "ManagerVoto.aggiornare(Voto)", "ManagerVoto.inserire(Voto)", "ManagerRegistrati.eliminareNota(Nota)", "ManagerRegistrati.inserireRitardo(Ritardo)", "ManagerRegistrati.aggiornareAssenza(Assenza)", "ManagerRegistrati.aggiornareNota(Nota)", "ManagerVoto.eliminare(Voto)", "ManagerRegistrati.inserireNota(Nota)", "ManagerRegistrati.inserireAssenza(Assenza)", "ManagerRegistrati.eliminareRitardo(Ritardo)", "ManagerIndirizzo.inserire(Indirizzo)", "ManagerClasse.eliminare(Classe)", "ManagerRegistrati.aggiornareRitardo(Ritardo)", "ManagerClasse.inserire(Classe)"], "class_name": "Utility", "method_name": "eseguireOperazione", "params": ["Connection", "String"]}, "Utility.ottenereValoreMassimo(String,String)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ManagerRegistrati.inserireNota(Nota)", "ManagerInsegnamento.inserire(Insegnamento)", "ManagerRegistrati.inserireAssenza(Assenza)", "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "ManagerVoto.inserire(Voto)", "ManagerIndirizzo.inserire(Indirizzo)", "ManagerRegistrati.inserireRitardo(Ritardo)", "ManagerClasse.inserire(Classe)"], "class_name": "Utility", "method_name": "ottenereValoreMassimo", "params": ["String", "String"]}, "Classe.settareIdClasse(int)": {"calls": [], "called_by": ["ManagerClasse.loadRecordFromRs(ResultSet)", "ManagerClasse.inserire(Classe)"], "class_name": "Classe", "method_name": "settareIdClasse", "params": ["int"]}, "ManagerClasse.aggiornare(Classe)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Classe.ottenereAnnoAccademico()", "Classe.ottenereIdClasse()", "Utility.eNull(Integer)", "Classe.ottenereIdIndirizzo()", "Utility.eseguireOperazione(Connection,String)", "Utility.eNull(String)", "Classe.ottenereNome()", "DBConnessione.ottenereConnesione()"], "called_by": [], "class_name": "ManagerClasse", "method_name": "aggiornare", "params": ["Classe"]}, "ManagerClasse.ottenereClassePerStudente(Utente)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.eNull(Integer)", "ManagerUtente.ottenereUtenteId(Utente)", "Utility.queryOperazione(Connection,String)", "ManagerUtente.eStudente(Utente)", "ManagerUtente.esiste(Utente)", "ManagerUtente.ottenereIstanza()", "ManagerClasse.loadRecordsFromRs(ResultSet)", "DBConnessione.ottenereConnesione()"], "called_by": ["ManagerClasse.ottenereClassePerUtenteAnnoAccademico(Utente,int)"], "class_name": "ManagerClasse", "method_name": "ottenereClassePerStudente", "params": ["Utente"]}, "ManagerClasse.loadRecordsFromRs(ResultSet)": {"calls": ["ManagerClasse.loadRecordFromRs(ResultSet)"], "called_by": ["ManagerClasse.ottenereClassePerStudente(Utente)", "ManagerClasse.ottenereClassePerInsegnante(Utente)", "ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)", "ManagerClasse.ottenereClassePerAnnoAccademico(int)"], "class_name": "ManagerClasse", "method_name": "loadRecordsFromRs", "params": ["ResultSet"]}, "ManagerClasse.loadRecordFromRs(ResultSet)": {"calls": ["Classe.settareIdIndirizzo(int)", "Classe.settareIdClasse(int)", "Classe.settareNome(String)", "Classe.settareAnnoAccademico(int)"], "called_by": ["ManagerClasse.ottenereClassePerID(int)", "ManagerClasse.loadRecordsFromRs(ResultSet)"], "class_name": "ManagerClasse", "method_name": "loadRecordFromRs", "params": ["ResultSet"]}, "ManagerClasse.loadIntegersFromRs(ResultSet)": {"calls": [], "called_by": ["ManagerClasse.ottenereAnnoAccademicoElenco()"], "class_name": "ManagerClasse", "method_name": "loadIntegersFromRs", "params": ["ResultSet"]}, "Indirizzo.ottenereIdIndirizzo()": {"calls": [], "called_by": ["ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "ManagerIndirizzo.elimina(Indirizzo)"], "class_name": "Indirizzo", "method_name": "ottenereIdIndirizzo", "params": []}, "Indirizzo.ottenereNome()": {"calls": [], "called_by": ["ManagerIndirizzo.ottenereIndirizzoId(Indirizzo)", "ManagerIndirizzo.inserire(Indirizzo)", "ManagerIndirizzo.esiste(Indirizzo)"], "class_name": "Indirizzo", "method_name": "ottenereNome", "params": []}, "Indirizzo.settareIdIndirizzo(int)": {"calls": [], "called_by": ["ManagerIndirizzo.loadRecordFromRs(ResultSet)", "ManagerIndirizzo.inserire(Indirizzo)"], "class_name": "Indirizzo", "method_name": "settareIdIndirizzo", "params": ["int"]}, "ManagerIndirizzo.ottenereIndirizzoId(Indirizzo)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Indirizzo.ottenereNome()", "Utility.eNull(String)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": [], "class_name": "ManagerIndirizzo", "method_name": "ottenereIndirizzoId", "params": ["Indirizzo"]}, "ManagerIndirizzo.loadRecordFromRs(ResultSet)": {"calls": ["Indirizzo.settareIdIndirizzo(int)", "Indirizzo.settareNome(String)"], "called_by": ["ManagerIndirizzo.loadRecordsFromRs(ResultSet)", "ManagerIndirizzo.ottenereIndirizzoPerId(int)"], "class_name": "ManagerIndirizzo", "method_name": "loadRecordFromRs", "params": ["ResultSet"]}, "ManagerIndirizzo.loadRecordsFromRs(ResultSet)": {"calls": ["ManagerIndirizzo.loadRecordFromRs(ResultSet)"], "called_by": ["ManagerIndirizzo.ottenereIndirizzoElenco()"], "class_name": "ManagerIndirizzo", "method_name": "loadRecordsFromRs", "params": ["ResultSet"]}, "ManagerIndirizzo.ottenereNomeIndirizzoPerId(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": [], "class_name": "ManagerIndirizzo", "method_name": "ottenereNomeIndirizzoPerId", "params": ["int"]}, "ManagerIndirizzo.ottenereInsegnamentiIndirizzo(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerIndirizzo.loadIntegersFromRs(ResultSet)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": [], "class_name": "ManagerIndirizzo", "method_name": "ottenereInsegnamentiIndirizzo", "params": ["int"]}, "ManagerIndirizzo.loadIntegersFromRs(ResultSet)": {"calls": [], "called_by": ["ManagerIndirizzo.ottenereInsegnamentiIndirizzo(int)"], "class_name": "ManagerIndirizzo", "method_name": "loadIntegersFromRs", "params": ["ResultSet"]}, "Insegnamento.ottenereNome()": {"calls": [], "called_by": ["ManagerInsegnamento.ottenereInsegnamentoId(Insegnamento)", "ManagerInsegnamento.aggiornare(Insegnamento)", "ManagerInsegnamento.inserire(Insegnamento)", "ManagerInsegnamento.esiste(Insegnamento)"], "class_name": "Insegnamento", "method_name": "ottenereNome", "params": []}, "ManagerInsegnamento.ottenereInsegnamentoNomePerId(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": [], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentoNomePerId", "params": ["int"]}, "ManagerInsegnamento.loadRecordFromRs(ResultSet)": {"calls": ["Insegnamento.settareNome(String)", "Insegnamento.settareId(int)"], "called_by": ["ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "ManagerInsegnamento.loadRecordsFromRs(ResultSet)"], "class_name": "ManagerInsegnamento", "method_name": "loadRecordFromRs", "params": ["ResultSet"]}, "ManagerInsegnamento.loadRecordsFromRs(ResultSet)": {"calls": ["ManagerInsegnamento.loadRecordFromRs(ResultSet)"], "called_by": ["ManagerInsegnamento.ottenereInsegnamentiPerClasseNome(String)", "ManagerInsegnamento.ottenereInsegnamentiPerIdUtenteIdClasse(int,int)", "ManagerInsegnamento.ottenereInsegnamenti()", "ManagerInsegnamento.ottenereInsegnamentiPerUtenteId(int)", "ManagerInsegnamento.ottenereInsegnamentiPerUtenteClasseID(int,int)", "ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)"], "class_name": "ManagerInsegnamento", "method_name": "loadRecordsFromRs", "params": ["ResultSet"]}, "ManagerInsegnamento.ottenereInsegnamentiPerUtenteId(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerInsegnamento.loadRecordsFromRs(ResultSet)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": [], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentiPerUtenteId", "params": ["int"]}, "ManagerInsegnamento.ottenereInsegnamentiPerUtenteClasseID(int,int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerInsegnamento.loadRecordsFromRs(ResultSet)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": [], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentiPerUtenteClasseID", "params": ["int", "int"]}, "ManagerInsegnamento.avereInsegnante(Insegnamento)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "DBConnessione.ottenereConnesione()", "Insegnamento.ottenereId()", "Utility.queryOperazione(Connection,String)", "Utility.eNull(Integer)"], "called_by": [], "class_name": "ManagerInsegnamento", "method_name": "avereInsegnante", "params": ["Insegnamento"]}, "ManagerInsegnamento.ottenereInsegnamentiPerClasseNome(String)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerInsegnamento.loadRecordsFromRs(ResultSet)", "Utility.eNull(String)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": [], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentiPerClasseNome", "params": ["String"]}, "ManagerInsegnamento.ottenereInsegnamentiPerIdUtenteIdClasse(int,int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "DBConnessione.ottenereConnesione()", "ManagerInsegnamento.loadRecordsFromRs(ResultSet)", "Utility.queryOperazione(Connection,String)", "Utility.eNull(Integer)"], "called_by": [], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentiPerIdUtenteIdClasse", "params": ["int", "int"]}, "Assenza.ottenereIdAssenza()": {"calls": [], "called_by": ["ManagerRegistrati.eliminareAssenza(Assenza)", "ManagerRegistrati.aggiornareAssenza(Assenza)", "ManagerRegistrati.esiste(Assenza)"], "class_name": "Assenza", "method_name": "ottenereIdAssenza", "params": []}, "ManagerRegistrati.esiste(Ritardo)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "DBConnessione.ottenereConnesione()", "Ritardo.ottenereIdRitardo()", "Utility.queryOperazione(Connection,String)", "Utility.eNull(Integer)"], "called_by": [], "class_name": "ManagerRegistrati", "method_name": "esiste", "params": ["Ritardo"]}, "Ritardo.ottenereIdRitardo()": {"calls": [], "called_by": ["ManagerRegistrati.esiste(Ritardo)", "ManagerRegistrati.eliminareRitardo(Ritardo)", "ManagerRegistrati.aggiornareRitardo(Ritardo)"], "class_name": "Ritardo", "method_name": "ottenereIdRitardo", "params": []}, "Assenza.ottenereIdUtente()": {"calls": [], "called_by": ["ManagerRegistrati.inserireAssenza(Assenza)", "ManagerRegistrati.aggiornareAssenza(Assenza)"], "class_name": "Assenza", "method_name": "ottenereIdUtente", "params": []}, "Assenza.ottenereDataAssenza()": {"calls": [], "called_by": ["ManagerRegistrati.inserireAssenza(Assenza)", "ManagerRegistrati.aggiornareAssenza(Assenza)"], "class_name": "Assenza", "method_name": "ottenereDataAssenza", "params": []}, "Utility.eNull(Date)": {"calls": ["Utility.date2SQLString(Date,boolean)"], "called_by": ["TestRegistrati.main(String[])", "ManagerRegistrati.inserireRitardo(Ritardo)", "ManagerRegistrati.aggiornareAssenza(Assenza)", "ManagerRegistrati.aggiornareNota(Nota)", "ManagerRegistrati.aggiornareGiustificare(Giustificare)", "ManagerRegistrati.inserireNota(Nota)", "ManagerRegistrati.inserireAssenza(Assenza)", "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)", "ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)", "ManagerRegistrati.aggiornareRitardo(Ritardo)"], "class_name": "Utility", "method_name": "eNull", "params": ["Date"]}, "Assenza.ottenereIdGiustificare()": {"calls": [], "called_by": ["ManagerRegistrati.inserireAssenza(Assenza)", "ManagerRegistrati.aggiornareAssenza(Assenza)", "ManagerRegistrati.eliminareAssenza(Assenza)", "ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)", "ManagerRegistrati.avereGiustificare(Assenza)"], "class_name": "Assenza", "method_name": "ottenereIdGiustificare", "params": []}, "Assenza.ottenereAnnoAccademico()": {"calls": [], "called_by": ["ManagerRegistrati.inserireAssenza(Assenza)", "ManagerRegistrati.aggiornareAssenza(Assenza)"], "class_name": "Assenza", "method_name": "ottenereAnnoAccademico", "params": []}, "Assenza.settareIdAssenza(int)": {"calls": [], "called_by": ["ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "ManagerRegistrati.inserireAssenza(Assenza)"], "class_name": "Assenza", "method_name": "settareIdAssenza", "params": ["int"]}, "Ritardo.ottenereIdUtente()": {"calls": [], "called_by": ["ManagerRegistrati.inserireRitardo(Ritardo)", "ManagerRegistrati.aggiornareRitardo(Ritardo)"], "class_name": "Ritardo", "method_name": "ottenereIdUtente", "params": []}, "Ritardo.ottenereDataRitardo()": {"calls": [], "called_by": ["ManagerRegistrati.inserireRitardo(Ritardo)", "ManagerRegistrati.aggiornareRitardo(Ritardo)"], "class_name": "Ritardo", "method_name": "ottenereDataRitardo", "params": []}, "Ritardo.ottenereTempoRitardo()": {"calls": [], "called_by": ["ManagerRegistrati.inserireRitardo(Ritardo)", "ManagerRegistrati.aggiornareRitardo(Ritardo)"], "class_name": "Ritardo", "method_name": "ottenereTempoRitardo", "params": []}, "Ritardo.ottenereAnnoAccademico()": {"calls": [], "called_by": ["ManagerRegistrati.inserireRitardo(Ritardo)", "ManagerRegistrati.aggiornareRitardo(Ritardo)"], "class_name": "Ritardo", "method_name": "ottenereAnnoAccademico", "params": []}, "Ritardo.settareIdRitardo(int)": {"calls": [], "called_by": ["ManagerRegistrati.loadDelayFromRs(ResultSet)", "ManagerRegistrati.inserireRitardo(Ritardo)"], "class_name": "Ritardo", "method_name": "settareIdRitardo", "params": ["int"]}, "Nota.ottenereDescrizione()": {"calls": [], "called_by": ["ManagerRegistrati.inserireNota(Nota)", "ManagerRegistrati.aggiornareNota(Nota)"], "class_name": "Nota", "method_name": "ottenereDescrizione", "params": []}, "Nota.ottenereInsegnante()": {"calls": [], "called_by": ["ManagerRegistrati.inserireNota(Nota)", "ManagerRegistrati.aggiornareNota(Nota)"], "class_name": "Nota", "method_name": "ottenereInsegnante", "params": []}, "Nota.ottenereIdUtente()": {"calls": [], "called_by": ["ManagerRegistrati.inserireNota(Nota)", "ManagerRegistrati.aggiornareNota(Nota)"], "class_name": "Nota", "method_name": "ottenereIdUtente", "params": []}, "Nota.ottenereDataNota()": {"calls": [], "called_by": ["ManagerRegistrati.inserireNota(Nota)", "ManagerRegistrati.aggiornareNota(Nota)"], "class_name": "Nota", "method_name": "ottenereDataNota", "params": []}, "Nota.ottenereAnnoAccademico()": {"calls": [], "called_by": ["ManagerRegistrati.inserireNota(Nota)", "ManagerRegistrati.aggiornareNota(Nota)"], "class_name": "Nota", "method_name": "ottenereAnnoAccademico", "params": []}, "Giustificare.ottenereIdUtente()": {"calls": [], "called_by": ["ManagerRegistrati.aggiornareGiustificare(Giustificare)", "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)"], "class_name": "Giustificare", "method_name": "ottenereIdUtente", "params": []}, "Giustificare.ottenereDataGiustificare()": {"calls": [], "called_by": ["ManagerRegistrati.aggiornareGiustificare(Giustificare)", "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)"], "class_name": "Giustificare", "method_name": "ottenereDataGiustificare", "params": []}, "Giustificare.ottenereAnnoAccademico()": {"calls": [], "called_by": ["ManagerRegistrati.aggiornareGiustificare(Giustificare)", "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)"], "class_name": "Giustificare", "method_name": "ottenereAnnoAccademico", "params": []}, "Giustificare.settareIdGiustificare(int)": {"calls": [], "called_by": ["TestRegistrati.main(String[])", "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "ManagerRegistrati.loadJustifyFromRs(ResultSet)"], "class_name": "Giustificare", "method_name": "settareIdGiustificare", "params": ["int"]}, "ManagerRegistrati.aggiornareAssenza(Assenza)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Assenza.ottenereAnnoAccademico()", "Utility.eNull(Integer)", "Assenza.ottenereDataAssenza()", "Utility.eseguireOperazione(Connection,String)", "Assenza.ottenereIdGiustificare()", "Utility.eNull(Date)", "Assenza.ottenereIdAssenza()", "Assenza.ottenereIdUtente()", "DBConnessione.ottenereConnesione()"], "called_by": ["ManagerRegistrati.eliminareGiustificare(int)", "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)"], "class_name": "ManagerRegistrati", "method_name": "aggiornareAssenza", "params": ["Assenza"]}, "ManagerRegistrati.ottenereAssenzaPerIdGiustificare(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ManagerRegistrati.eliminareGiustificare(int)"], "class_name": "ManagerRegistrati", "method_name": "ottenereAssenzaPerIdGiustificare", "params": ["int"]}, "ManagerRegistrati.loadNoteFromRs(ResultSet)": {"calls": ["Nota.settareInsegnante(String)", "Nota.settareAnnoAccademico(int)", "Nota.settareIdNota(int)", "Nota.settareIdUtente(int)", "Nota.settareDataNota(Date)", "Nota.settareDescrizione(String)"], "called_by": ["ManagerRegistrati.ottenereNotaPerIDUtenteEAnnoAccademico(int,int)", "ManagerRegistrati.ottenereNotaPerId(int)"], "class_name": "ManagerRegistrati", "method_name": "loadNoteFromRs", "params": ["ResultSet"]}, "ManagerRegistrati.loadAbsenceFromRs(ResultSet)": {"calls": ["Assenza.settareIdAssenza(int)", "Assenza.settareDataAssenza(Date)", "Assenza.settareAnnoAccademico(int)", "Assenza.settareIdUtente(int)", "Assenza.settareIdGiustificare(Integer)"], "called_by": ["ManagerRegistrati.ottenereAssenzaPerIdAssenza(int)", "ManagerRegistrati.ottenereAssenzaPerIdGiustificare(int)", "ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)", "ManagerRegistrati.ottenereAssenzaPerIDUtenteEAnnoAccademico(int,int)"], "class_name": "ManagerRegistrati", "method_name": "loadAbsenceFromRs", "params": ["ResultSet"]}, "ManagerRegistrati.ottenereRitardoPerId(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerRegistrati.loadDelayFromRs(ResultSet)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": [], "class_name": "ManagerRegistrati", "method_name": "ottenereRitardoPerId", "params": ["int"]}, "ManagerRegistrati.loadDelayFromRs(ResultSet)": {"calls": ["Ritardo.settareAnnoAccademico(int)", "Ritardo.settareDataRitardo(Date)", "Ritardo.settareTempoRitardo(String)", "Ritardo.settareIdUtente(int)", "Ritardo.settareIdRitardo(int)"], "called_by": ["ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)", "ManagerRegistrati.ottenereRitardoPerId(int)"], "class_name": "ManagerRegistrati", "method_name": "loadDelayFromRs", "params": ["ResultSet"]}, "ManagerRegistrati.loadJustifyFromRs(ResultSet)": {"calls": ["Giustificare.settareIdUtente(int)", "Giustificare.settareIdGiustificare(int)", "Giustificare.settareAnnoAccademico(int)", "Giustificare.settareDataGiustificare(Date)"], "called_by": ["ManagerRegistrati.ottenereGiustificarePerIdGiustificare(int)", "ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)"], "class_name": "ManagerRegistrati", "method_name": "loadJustifyFromRs", "params": ["ResultSet"]}, "ManagerRegistrati.avereGiustificare(Assenza)": {"calls": ["Assenza.ottenereIdGiustificare()", "ManagerRegistrati.esiste(Assenza)"], "called_by": [], "class_name": "ManagerRegistrati", "method_name": "avereGiustificare", "params": ["Assenza"]}, "ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Assenza.ottenereIdGiustificare()", "ManagerRegistrati.esiste(Assenza)", "ManagerRegistrati.loadJustifyFromRs(ResultSet)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": [], "class_name": "ManagerRegistrati", "method_name": "ottenereGiustificarePerAssenza", "params": ["Assenza"]}, "ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.eNull(Date)", "ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)"], "class_name": "ManagerRegistrati", "method_name": "ottenereAssenzaPerIDUtenteEData", "params": ["int", "Date"]}, "ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerRegistrati.loadDelayFromRs(ResultSet)", "Utility.eNull(Date)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": ["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)"], "class_name": "ManagerRegistrati", "method_name": "ottenereRitardoPerIDUtenteEData", "params": ["int", "Date"]}, "RegistratiLinea.settareStudente(VoceElencoUtenti)": {"calls": [], "called_by": ["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)"], "class_name": "RegistratiLinea", "method_name": "settareStudente", "params": ["VoceElencoUtenti"]}, "RegistratiLinea.settareAssenza(Assenza)": {"calls": [], "called_by": ["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)"], "class_name": "RegistratiLinea", "method_name": "settareAssenza", "params": ["Assenza"]}, "RegistratiLinea.settareRitardo(Ritardo)": {"calls": [], "called_by": ["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)"], "class_name": "RegistratiLinea", "method_name": "settareRitardo", "params": ["Ritardo"]}, "ManagerVoto.esiste(Voto)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "DBConnessione.ottenereConnesione()", "Voto.ottenereId_voti()", "Utility.queryOperazione(Connection,String)", "Utility.eNull(Integer)"], "called_by": [], "class_name": "ManagerVoto", "method_name": "esiste", "params": ["Voto"]}, "Voto.ottenereId_voti()": {"calls": [], "called_by": ["ManagerVoto.eliminare(Voto)", "ManagerVoto.aggiornare(Voto)", "ManagerVoto.esiste(Voto)", "ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)"], "class_name": "Voto", "method_name": "ottenereId_voti", "params": []}, "Voto.ottenereId_utente()": {"calls": [], "called_by": ["ManagerVoto.aggiornare(Voto)", "ManagerVoto.inserire(Voto)"], "class_name": "Voto", "method_name": "ottenereId_utente", "params": []}, "Voto.ottenereInsegnamento()": {"calls": [], "called_by": ["ManagerVoto.aggiornare(Voto)", "ManagerVoto.inserire(Voto)"], "class_name": "Voto", "method_name": "ottenereInsegnamento", "params": []}, "Voto.ottenereScritto()": {"calls": [], "called_by": ["ManagerVoto.aggiornare(Voto)", "ManagerVoto.inserire(Voto)"], "class_name": "Voto", "method_name": "ottenereScritto", "params": []}, "Voto.ottenereOrale()": {"calls": [], "called_by": ["ManagerVoto.aggiornare(Voto)", "ManagerVoto.inserire(Voto)"], "class_name": "Voto", "method_name": "ottenereOrale", "params": []}, "Voto.ottenereLaboratorio()": {"calls": [], "called_by": ["ManagerVoto.aggiornare(Voto)", "ManagerVoto.inserire(Voto)"], "class_name": "Voto", "method_name": "ottenereLaboratorio", "params": []}, "Voto.ottenereAnnoAccademico()": {"calls": [], "called_by": ["ManagerVoto.aggiornare(Voto)", "ManagerVoto.inserire(Voto)"], "class_name": "Voto", "method_name": "ottenereAnnoAccademico", "params": []}, "Voto.ottenereTurno()": {"calls": [], "called_by": ["ManagerVoto.aggiornare(Voto)", "ManagerVoto.inserire(Voto)"], "class_name": "Voto", "method_name": "ottenereTurno", "params": []}, "Voto.settareId_voti(int)": {"calls": [], "called_by": ["ManagerVoto.loadRecordFromRs(ResultSet)", "ManagerVoto.inserire(Voto)"], "class_name": "Voto", "method_name": "settareId_voti", "params": ["int"]}, "ManagerVoto.loadRecordFromRs(ResultSet)": {"calls": ["Voto.settareId_utente(int)", "Voto.settareLaboratorio(int)", "Voto.settareOrale(int)", "Voto.settareId_voti(int)", "Voto.settareInsegnamento(int)", "Voto.settareScritto(int)", "Voto.settareTurno(int)", "Voto.settareAnnoAccademico(int)"], "called_by": ["ManagerVoto.loadRecordsFromRs(ResultSet)", "ManagerVoto.ottenereVotoPerId(int)", "ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)"], "class_name": "ManagerVoto", "method_name": "loadRecordFromRs", "params": ["ResultSet"]}, "ManagerVoto.ottenereInsegnamentoIdPerVotoId(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": [], "class_name": "ManagerVoto", "method_name": "ottenereInsegnamentoIdPerVotoId", "params": ["int"]}, "ManagerVoto.ottenereVoto()": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerVoto.loadRecordsFromRs(ResultSet)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": [], "class_name": "ManagerVoto", "method_name": "ottenereVoto", "params": []}, "ManagerVoto.loadRecordsFromRs(ResultSet)": {"calls": ["ManagerVoto.loadRecordFromRs(ResultSet)"], "called_by": ["ManagerVoto.ottenereVotoPerUtenteId(int)", "ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)", "ManagerVoto.ottenereVoto()"], "class_name": "ManagerVoto", "method_name": "loadRecordsFromRs", "params": ["ResultSet"]}, "ManagerVoto.ottenereVotoPerUtenteId(int)": {"calls": ["DBConnessione.rilasciareConnessione(Connection)", "ManagerVoto.loadRecordsFromRs(ResultSet)", "Utility.eNull(Integer)", "Utility.queryOperazione(Connection,String)", "DBConnessione.ottenereConnesione()"], "called_by": [], "class_name": "ManagerVoto", "method_name": "ottenereVotoPerUtenteId", "params": ["int"]}, "TestRegistrati.main(String[])": {"calls": ["Giustificare.settareIdGiustificare(int)", "ManagerRegistrati.inserireRitardo(Ritardo)", "ManagerRegistrati.ottenereIstanza()", "Nota.settareDataNota(Date)", "Nota.settareDescrizione(String)", "Ritardo.settareAnnoAccademico(int)", "Giustificare.settareDataGiustificare(Date)", "VoceElencoUtenti.ottenereNome()", "Ritardo.settareDataRitardo(Date)", "Nota.settareInsegnante(String)", "Giustificare.settareIdUtente(int)", "Ritardo.settareTempoRitardo(String)", "ManagerRegistrati.avereRitardo(RegistratiLinea)", "Assenza.settareDataAssenza(Date)", "Assenza.settareAnnoAccademico(int)", "Nota.settareAnnoAccademico(int)", "RegistratiLinea.ottenereStudente()", "Giustificare.settareAnnoAccademico(int)", "ManagerRegistrati.avereAssenza(RegistratiLinea)", "Assenza.settareIdUtente(int)", "Ritardo.settareIdUtente(int)", "Assenza.settareIdGiustificare(Integer)", "Utility.eNull(Date)", "Nota.settareIdNota(int)", "ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "Nota.settareIdUtente(int)"], "called_by": [], "class_name": "TestRegistrati", "method_name": "main", "params": ["String[]"]}, "VoceElencoUtenti.ottenereNome()": {"calls": [], "called_by": ["TestRegistrati.main(String[])"], "class_name": "VoceElencoUtenti", "method_name": "ottenereNome", "params": []}, "UtenteTest.main(String[])": {"calls": ["Voto.settareLaboratorio(int)", "Voto.settareInsegnamento(int)", "ManagerVoto.inserire(Voto)", "Voto.settareScritto(int)", "Voto.settareAnnoAccademico(int)", "Voto.settareId_utente(int)", "Insegnamento.settareId(int)", "Voto.settareOrale(int)", "Voto.settareTurno(int)", "ManagerVoto.ottenereIstanza()", "VoceElencoUtenti.settareId(int)"], "called_by": [], "class_name": "UtenteTest", "method_name": "main", "params": ["String[]"]}, "MailUtility.inviareMail(String,String,String,String)": {"calls": ["Utility.ottenereServerSmtp()"], "called_by": [], "class_name": "MailUtility", "method_name": "inviareMail", "params": ["String", "String", "String", "String"]}, "Utility.ottenereServerSmtp()": {"calls": [], "called_by": ["MailUtility.inviareMail(String,String,String,String)"], "class_name": "Utility", "method_name": "ottenereServerSmtp", "params": []}, "Utility.sostituireTuttoStrings(String,String,String)": {"calls": [], "called_by": ["Utility.eNull(String)"], "class_name": "Utility", "method_name": "sostituireTuttoStrings", "params": ["String", "String", "String"]}, "Utility.date2SQLString(Date,boolean)": {"calls": [], "called_by": ["Utility.eNull(Date)"], "class_name": "Utility", "method_name": "date2SQLString", "params": ["Date", "boolean"]}}